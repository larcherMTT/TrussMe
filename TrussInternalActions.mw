<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2019" minor="2"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="false" autoexpanding_sections="true" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false" editable="true">
</View-Properties>
<MapleNet-Properties prettyprint="3" warnlevel="3" compactdisplay="false" preplot="" helpbrowser="standard" displayprecision="-1" echo="1" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" imaginaryunit="I" longdelim="true" elisiontermsthreshold="10000" elisiondigitsafter="100" elisiondigitsbefore="100" plotdevice="inline" errorbreak="1" plotoptions="" plotdriver="opengl" quiet="false" elisiontermsbefore="100" elisiontermsafter="100" historytimestamp="false" screenwidth="79" indentamount="4" plotoutput="terminal" screenpixelheight="1440" rtablesize="20" useclientjvm="true" labelwidth="20" postplot="" typesetting="extended" ansi="false" ansicolor="[]" elisiondigitsthreshold="10000" showassumed="1" ansilprint="false" trailingsemicolon="true" errorcursor="false" labelling="true" screenheight="25" prompt="&gt; " verboseproc="1" latexwidth="8.0" ShowLabels="true"/>
<Styles>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode=""/>
<Task-table>
    <Task-category name="&lt;default&gt;"/>
</Task-table>
<Task/>
<Group hide-input="false" labelreference="L1" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">restart;
interface(rtablesize=20):</Text-field>
</Input>
</Group>
<Group labelreference="L44" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Maple class for internal actions computation in truss elements</Text-field>
</Input>
</Group>
<Group labelreference="L45" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Matteo Larcher  
November 2020</Text-field>
</Input>
</Group>
<Group labelreference="L82" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">NOTE: 

TO DO:
genero libreria (criptata)
describe conventions
make a plot procedure 
(check on redundant constraint position to be added) es 2 hinges in the same position 
add stress computation and verification 
add displacement computation 
add rod object and joints and solve reticular isostatic systems -&gt; require reference frame definition 
joint can work also for support joint(...,obj1,obj2) obj2=ground in case of supports
make reaction and joints forces as properties of supports/joints (see joints in MBSymba)
consider methods for iperstatic structure 
add gravity
make STRUCTURE object which contains all structure components 
make STRUCTURESOLVER method which call progammaticaly the sequence of solving methods </Text-field><Text-field style="Text" layout="Normal">translation are meninful only for structure plot otherwise the rotation of RF is suficient (IN DISPLACEMENT CONTINUITY THEY COUNT)
supports and joint can now be included directly in internal actions and reactions 
grubler for dof computation 
in order to obtain structure ttal displacement we neen constraint equations to guarantee continuity, joints and support may be updated with additional property, 
maybe is better to give directly the force components in supports and joints insteads of dof_constrained vector 
add optional &quot;sol&quot; argument to internal actions (similar to dispalement and stress) which will substitute the structure solutions in forces  

save sructure solution in struct object
make get support reactions method (with check if struct is solved) and clear the EARTH[reactions] wich is useless</Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Types definition</Text-field></Title>
<Group hide-input="false" labelreference="L131" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/FRAME`:=  {Matrix};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErdHlwZS9GUkFNRUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2Ji1GLDYlUSdNYXRyaXhGJ0YvRjIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsY3ViO0YnLyUmY2xvc2VHUScmcmN1YjtGJ0Y5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSt0eXBlL0ZSQU1FR0YoPCNJJ01hdHJpeEdGJTcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L232" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/GROUND`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEsdHlwZS9HUk9VTkRGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkobWZlbmNlZEdGJDYmLUYjNiYtRiw2JVEmdGFibGVGJ0YvRjIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsY3ViO0YnLyUmY2xvc2VHUScmcmN1YjtGJ0Y5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSx0eXBlL0dST1VOREdGKDwjSSZ0YWJsZUdGJjcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L72" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/BEAM`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEqdHlwZS9CRUFNRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GM1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj0vJSlzdHJldGNoeUdGPS8lKnN5bW1ldHJpY0dGPS8lKGxhcmdlb3BHRj0vJS5tb3ZhYmxlbGltaXRzR0Y9LyUnYWNjZW50R0Y9LyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTC1JKG1mZW5jZWRHRiQ2Ji1GIzYmLUYsNiVRJnRhYmxlRidGL0YyLyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y9RjlGOS8lJW9wZW5HUScmbGN1YjtGJy8lJmNsb3NlR1EnJnJjdWI7RidGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSp0eXBlL0JFQU1HRig8I0kmdGFibGVHRiY3I0Yu</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L118" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/ROD`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEpdHlwZS9ST0RGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkobWZlbmNlZEdGJDYmLUYjNiYtRiw2JVEmdGFibGVGJ0YvRjIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsY3ViO0YnLyUmY2xvc2VHUScmcmN1YjtGJ0Y5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSl0eXBlL1JPREdGKDwjSSZ0YWJsZUdGJjcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L16" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/FORCE`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErdHlwZS9GT1JDRUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2Ji1GLDYlUSZ0YWJsZUYnRi9GMi8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGPUY5RjkvJSVvcGVuR1EnJmxjdWI7RicvJSZjbG9zZUdRJyZyY3ViO0YnRjk=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSt0eXBlL0ZPUkNFR0YoPCNJJnRhYmxlR0YmNyNGLg==</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L27" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/MOMENT`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEsdHlwZS9NT01FTlRGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkobWZlbmNlZEdGJDYmLUYjNiYtRiw2JVEmdGFibGVGJ0YvRjIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsY3ViO0YnLyUmY2xvc2VHUScmcmN1YjtGJ0Y5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSx0eXBlL01PTUVOVEdGKDwjSSZ0YWJsZUdGJjcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L34" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/QLOAD`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErdHlwZS9RTE9BREYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2Ji1GLDYlUSZ0YWJsZUYnRi9GMi8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGPUY5RjkvJSVvcGVuR1EnJmxjdWI7RicvJSZjbG9zZUdRJyZyY3ViO0YnRjk=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSt0eXBlL1FMT0FER0YoPCNJJnRhYmxlR0YmNyNGLg==</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L36" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/SUPPORT`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEtdHlwZS9TVVBQT1JURicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GM1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj0vJSlzdHJldGNoeUdGPS8lKnN5bW1ldHJpY0dGPS8lKGxhcmdlb3BHRj0vJS5tb3ZhYmxlbGltaXRzR0Y9LyUnYWNjZW50R0Y9LyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTC1JKG1mZW5jZWRHRiQ2Ji1GIzYmLUYsNiVRJnRhYmxlRidGL0YyLyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y9RjlGOS8lJW9wZW5HUScmbGN1YjtGJy8lJmNsb3NlR1EnJnJjdWI7RidGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SS10eXBlL1NVUFBPUlRHRig8I0kmdGFibGVHRiY3I0Yu</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L152" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/JOINT`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErdHlwZS9KT0lOVEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2Ji1GLDYlUSZ0YWJsZUYnRi9GMi8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGPUY5RjkvJSVvcGVuR1EnJmxjdWI7RicvJSZjbG9zZUdRJyZyY3ViO0YnRjk=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSt0eXBlL0pPSU5UR0YoPCNJJnRhYmxlR0YmNyNGLg==</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L117" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/MATERIAL`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEudHlwZS9NQVRFUklBTEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2Ji1GLDYlUSZ0YWJsZUYnRi9GMi8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGPUY5RjkvJSVvcGVuR1EnJmxjdWI7RicvJSZjbG9zZUdRJyZyY3ViO0YnRjk=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SS50eXBlL01BVEVSSUFMR0YoPCNJJnRhYmxlR0YmNyNGLg==</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L153" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">`type/STRUCTURE`:=  {table};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEvdHlwZS9TVFJVQ1RVUkVGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkobWZlbmNlZEdGJDYmLUYjNiYtRiw2JVEmdGFibGVGJ0YvRjIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsY3ViO0YnLyUmY2xvc2VHUScmcmN1YjtGJ0Y5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SS90eXBlL1NUUlVDVFVSRUdGKDwjSSZ0YWJsZUdGJjcjRi4=</Equation></Text-field>
</Output>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Internal variables</Text-field></Title>
<Group hide-input="false" labelreference="L129" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">ground := &lt;&lt;1,0,0,0&gt;| 
           &lt;0,1,0,0&gt;|
           &lt;0,0,1,0&gt;|
           &lt;0,0,0,1&gt;&gt;;</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSSVtcm93R0YkNiYtSSNtaUdGJDYlUSdncm91bmRGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0Y2USdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGQC8lKXN0cmV0Y2h5R0ZALyUqc3ltbWV0cmljR0ZALyUobGFyZ2VvcEdGQC8lLm1vdmFibGVsaW1pdHNHRkAvJSdhY2NlbnRHRkAvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZPLUkobWZlbmNlZEdGJDYoLUYsNiYtSSdtdGFibGVHRiQ2OC1JJG10ckdGJDYpLUkkbXRkR0YkNigtSSNtbkdGJDYkUSIxRidGPC8lKXJvd2FsaWduR1EhRicvJSxjb2x1bW5hbGlnbkdGYG8vJStncm91cGFsaWduR0Zgby8lKHJvd3NwYW5HRl1vLyUrY29sdW1uc3BhbkdGXW8tRmhuNigtRltvNiRRIjBGJ0Y8Rl5vRmFvRmNvRmVvRmdvRmlvRmlvRl5vRmFvRmNvLUZlbjYpRmlvRmduRmlvRmlvRl5vRmFvRmNvLUZlbjYpRmlvRmlvRmduRmlvRl5vRmFvRmNvLUZlbjYpRmlvRmlvRmlvRmduRl5vRmFvRmNvLyUmYWxpZ25HUSVheGlzRicvRl9vUSliYXNlbGluZUYnL0Zib1EnY2VudGVyRicvRmRvUSd8ZnJsZWZ0fGhyRicvJS9hbGlnbm1lbnRzY29wZUdGNC8lLGNvbHVtbndpZHRoR1ElYXV0b0YnLyUmd2lkdGhHRmFxLyUrcm93c3BhY2luZ0dRJjEuMGV4RicvJS5jb2x1bW5zcGFjaW5nR1EmMC44ZW1GJy8lKXJvd2xpbmVzR1Elbm9uZUYnLyUsY29sdW1ubGluZXNHRlxyLyUmZnJhbWVHRlxyLyUtZnJhbWVzcGFjaW5nR1EsMC40ZW1+MC41ZXhGJy8lKmVxdWFscm93c0dGQC8lLWVxdWFsY29sdW1uc0dGQC8lLWRpc3BsYXlzdHlsZUdGQC8lJXNpZGVHUSZyaWdodEYnLyUwbWlubGFiZWxzcGFjaW5nR0ZpcS8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGQEY8RjwvSSttc2VtYW50aWNzR0YkUSdNYXRyaXhGJy8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGZHNGPC1GUzYoLUYsNiYtRlg2OC1GZW42KS1GaG42KC1GW282JkZdb0Zfc0Zic0Y8Rl5vRmFvRmNvRmVvRmdvLUZobjYoLUZbbzYmRl1wRl9zRmJzRjxGXm9GYW9GY29GZW9GZ29GaXRGaXRGXm9GYW9GY28tRmVuNilGaXRGZXRGaXRGaXRGXm9GYW9GY28tRmVuNilGaXRGaXRGZXRGaXRGXm9GYW9GY28tRmVuNilGaXRGaXRGaXRGZXRGXm9GYW9GY29GZHBGZ3AvRmJvRlxzRltxRl1xRl9xRmJxRmRxRmdxRmpxRl1yRl9yRmFyRmRyRmZyRmhyRmpyRl1zRl9zRmJzRjxGX3NGYnNGPC9GaHNRIltGJy9GW3RRIl1GJw==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSdncm91bmRHRigtSSdSVEFCTEVHRig2JSI1RThUMCN5U3VZJT0tSSdNQVRSSVhHRig2IzcmNyYtSSNtbkc2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiNRIjFGKC1GODYjUSIwRihGPkY+NyZGPkY3Rj5GPjcmRj5GPkY3Rj43JkY+Rj5GPkY3SSdNYXRyaXhHRiU3Iy1GRDYjL0kkJWlkR0YoRjE=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L157" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">_gravity := [0,0,0];</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEpX2dyYXZpdHlGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkobWZlbmNlZEdGJDYmLUYjNiotSSNtbkdGJDYkUSIwRidGOS1GNjYtUSIsRidGOUY7L0Y/RjFGQEZCRkRGRkZIL0ZLUSYwLjBlbUYnL0ZOUSwwLjMzMzMzMzNlbUYnRlRGWEZULyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y9RjlGOS8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSlfZ3Jhdml0eUdGKDclIiIhRi9GLzcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L230" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">EARTH := table({type = 'GROUND',
                name = &quot;ground&quot;,
                length = 0, 
                frame = ground,
                admissible_loads = [1,1,1,1,1,1]});</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSSVtcm93R0YkNigtSSNtaUdGJDYlUSZFQVJUSEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjZRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0ZALyUpc3RyZXRjaHlHRkAvJSpzeW1tZXRyaWNHRkAvJShsYXJnZW9wR0ZALyUubW92YWJsZWxpbWl0c0dGQC8lJ2FjY2VudEdGQC8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk8tRjk2LVEmdGFibGVGJ0Y8Rj5GQUZDRkVGR0ZJRksvRk5RJjAuMGVtRicvRlFGVi1GOTYtUTAmQXBwbHlGdW5jdGlvbjtGJ0Y8Rj5GQUZDRkVGR0ZJRktGVUZXLUkobWZlbmNlZEdGJDYkLUZmbjYmLUYsNi4tRiw2Ji1GLzYlUSV0eXBlRidGMkY1LUY5Ni1RKSZlcXVhbHM7RidGPEY+RkFGQ0ZFRkdGSUZLRk1GUC1GLzYlUSdHUk9VTkRGJ0YyRjVGPC1GOTYtUSIsRidGPEY+L0ZCRjRGQ0ZFRkdGSUZLRlUvRlFRLDAuMzMzMzMzM2VtRictRiw2Ji1GLzYlUSVuYW1lRidGMkY1RmFvLUkjbXNHRiQ2I1EnZ3JvdW5kRidGPEZnby1GLDYmLUYvNiVRMWFkbWlzc2libGVfbG9hZHNGJ0YyRjVGYW8tRmZuNiYtRiw2MC1JI21uR0YkNiRRIjFGJ0Y8RmdvRl9xRmdvRl9xRmdvRl9xRmdvRl9xRmdvRl9xLyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0ZARjxGPC8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGPEZnby1GLDYmLUYvNiVRJ2xlbmd0aEYnRjJGNUZhby1GYHE2JFEiMEYnRjxGPEZnby1GLDYmLUYvNiVRJmZyYW1lRidGMkY1RmFvLUZmbjYoLUYsNiYtSSdtdGFibGVHRiQ2OC1JJG10ckdGJDYpLUkkbXRkR0YkNihGX3EvJSlyb3dhbGlnbkdRIUYnLyUsY29sdW1uYWxpZ25HRmpzLyUrZ3JvdXBhbGlnbkdGanMvJShyb3dzcGFuR0ZicS8lK2NvbHVtbnNwYW5HRmJxLUZmczYoRmNyRmhzRlt0Rl10Rl90RmF0RmN0RmN0RmhzRlt0Rl10LUZjczYpRmN0RmVzRmN0RmN0RmhzRlt0Rl10LUZjczYpRmN0RmN0RmVzRmN0RmhzRlt0Rl10LUZjczYpRmN0RmN0RmN0RmVzRmhzRlt0Rl10LyUmYWxpZ25HUSVheGlzRicvRmlzUSliYXNlbGluZUYnL0ZcdFEnY2VudGVyRicvRl50USd8ZnJsZWZ0fGhyRicvJS9hbGlnbm1lbnRzY29wZUdGNC8lLGNvbHVtbndpZHRoR1ElYXV0b0YnLyUmd2lkdGhHRmh1LyUrcm93c3BhY2luZ0dRJjEuMGV4RicvJS5jb2x1bW5zcGFjaW5nR1EmMC44ZW1GJy8lKXJvd2xpbmVzR1Elbm9uZUYnLyUsY29sdW1ubGluZXNHRmN2LyUmZnJhbWVHRmN2LyUtZnJhbWVzcGFjaW5nR1EsMC40ZW1+MC41ZXhGJy8lKmVxdWFscm93c0dGQC8lLWVxdWFsY29sdW1uc0dGQC8lLWRpc3BsYXlzdHlsZUdGQC8lJXNpZGVHUSZyaWdodEYnLyUwbWlubGFiZWxzcGFjaW5nR0ZgdkZjcUZmcUY8RjwvSSttc2VtYW50aWNzR0YkUSdNYXRyaXhGJ0ZocUZbckZmd0Y8RmNxRmZxRjxGPEZocUZbckY8RjwtRiw2KC1GLzYlRlRGMkY1RlgtRmZuNiQtRiw2Ji1GLDYoLUYvNiVRJCVpZEYnRjJGNS1GOTYtUSI9RidGPEY+RkFGQ0ZFRkdGSUZLRk1GUC1GYHE2JFE1MTg0NDY3NDQwNzgxOTcxNTIzMThGJ0Y8RmNxRmZxRjxGY3FGZnFGPEY8RmNxRmZxRjw=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSZFQVJUSEdGKEtJJlRBQkxFR0YmNiM3Jy9JJXR5cGVHRiZJJ0dST1VOREdGKC9JJW5hbWVHRiZRJ2dyb3VuZEYoL0kxYWRtaXNzaWJsZV9sb2Fkc0dGKDcoIiIiRjtGO0Y7RjtGOy9JJ2xlbmd0aEdGJiIiIS9JJmZyYW1lR0YoLUknUlRBQkxFR0YoNiUiNUU4VDAjeVN1WSU9LUknTUFUUklYR0YoNiM3JjcmLUkjbW5HNiRGJi9JK21vZHVsZW5hbWVHRihGJDYjUSIxRigtRks2I1EiMEYoRlFGUTcmRlFGSkZRRlE3JkZRRlFGSkZRNyZGUUZRRlFGSkknTWF0cml4R0YlUShwcHJpbnQwRig3Iy1JJnRhYmxlR0YmNiMvSSQlaWRHRigiNT1COig+eVN1WSU9</Equation></Text-field>
</Output>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Protection</Text-field></Title>
<Group labelreference="L71" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">protect('type','components','coord','force','moment','forces','moments','beam','qload','dof_constr','length','cs_inertias','cs_dimensions','name','target','area','internal_actions','material','ground','X','Y','Z','TWOD');</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Functions</Text-field></Title>
<Group labelreference="L121" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">show := proc(X,$)
    print(X = X[type](op(op(X))));
end proc:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L122" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Rotate := proc(axis,theta)
    local TR;
    description &quot;rotation around an axis ('X','Y','Z') of a given angle theta&quot;;
    
    if axis='X' then
        TR := &lt;&lt;1,0,0,0&gt;| 
               &lt;0,cos(theta),sin(theta),0&gt;|
               &lt;0,-sin(theta),cos(theta),0&gt;|
               &lt;0,0,0,1&gt;&gt;;
    elif axis='Y' then
        TR := &lt;&lt;cos(theta),0,-sin(theta),0&gt;| 
               &lt;0,1,0,0&gt;|
               &lt;sin(theta),0,cos(theta),0&gt;|
               &lt;0,0,0,1&gt;&gt;;
    elif axis='Z' then
        TR := &lt;&lt;cos(theta),sin(theta),0,0&gt;| 
               &lt;-sin(theta),cos(theta),0,0&gt;|
               &lt;0,0,1,0&gt;|
               &lt;0,0,0,1&gt;&gt;;
    else
        error &quot;wrong axis&quot;;
    end
end proc:

Describe(rotate);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
rotate::symbol = rotate</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L126" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Translate := proc(x,y,z)
    local TR;
    description &quot;translation of x,y,z&quot;;
    
    TR := &lt;&lt;1,0,0,0&gt;| 
           &lt;0,1,0,0&gt;|
           &lt;0,0,1,0&gt;|
           &lt;x,y,z,1&gt;&gt;;
end proc:

Describe(translate);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
translate::symbol = translate</Text-field>
</Output>
</Group>
<Group labelreference="L228" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Project := proc(el,RF_from,RF_to,$)
    description &quot;projects vector[x1,x2,x3,0]/point[x1,x2,x3,1] from RF_from to RF_to&quot;;

    RF_from.LinearAlgebra[MatrixInverse](RF_to).&lt;el[1] , el[2] , el[3] , el[4]&gt;: 
    simplify([seq(%[i],i=1..4)]);
end proc:

Describe(Project);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
# projects vector[x1,x2,x3,0]/point[x1,x2,x3,1] from RF_from to RF_to
Project( el, RF_from, RF_to, $ )</Text-field>
</Output>
</Group>
<Group labelreference="L119" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">DefMaterial := proc({E := 210e9,ni := 0.3,G := E/(2*(1+ni)),rho := 7.4e3},$)
    local M;
    description &quot;Material definition
                 INPUTS : E -&gt; elastic modulus,
                          ni -&gt; Poisson modulus
                          G -&gt; shear modulus (default-&gt;E/(2*(1+ni))),
                          rho -&gt; density&quot;;

    M := table({type = 'MATERIAL',
                elastic_modulus = E, 
                shear_modulus = G,
                poisson_modulus = ni,
                density = rho});
end proc:

Describe(DefMaterial);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
# Material definition
# INPUTS : E -&gt; elastic modulus,
# ni -&gt; Poisson modulus
# G -&gt; 
# shear modulus (default-&gt;E/(2*(1+ni))),
# rho -&gt; density
DefMaterial( { E := .210e12, G := E/(2+2*ni), ni := .3, rho := .74e4 }, $ )</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L480" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">GetNames := proc(objs::{list({BEAM,ROD,SUPPORT,JOINT}),set({BEAM,ROD,SUPPORT,JOINT})})
    local i,names;
    description &quot;extract names of a list/set of objects&quot;;

    names := [];
    for i from 1 to nops(objs) do
        names := [op(names),objs[i][name]];
    end do;

    return names;
end proc:

Describe(GetNames);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
# extract names of a list/set of objects
GetNames( objs::{list({BEAM, JOINT, ROD, SUPPORT}), set({BEAM, JOINT, ROD, 
            SUPPORT})}
        )</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L2" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">MakeForce := proc(comps_RF::list,x,obj::{BEAM,ROD,GROUND},{RF::FRAME:=obj[frame]},$)
    local F, comps;
    description &quot;make Force object
                 INPUTS : comps -&gt; force components ([fx,fy,fz]) in RF,
                          x -&gt; force application point (axial coordinate),
                          obj -&gt; target object(beam),
                          RF(optional_key)-&gt; reference frame in which the force components are defined, default(obj[frame])&quot;;

    comps := Project([op(comps_RF),0],RF,obj[frame])[1..3];
    if obj[type] = ROD then
        if x&lt;&gt;0 and x&lt;&gt;obj[length] then error &quot;Only axial forces at the ROD extreemes are accepted&quot; end if;
        if comps[2]&lt;&gt;0 or comps[3]&lt;&gt;0 then error &quot;Only axial forces at the ROD extreemes are accepted&quot; end if;
    elif obj[type] = SUPORT or obj[type] = JOINT then
        if x&lt;&gt;0 then error &quot;supports and joints forces can only have 0 axial coordinate&quot;; end if;
    end if;
    F := table({type = 'FORCE',
                components = comps, 
                coord = x,
                target = obj[name]});
end proc:

Describe(MakeForce);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output"></Text-field><Text-field style="Line Printed Output" layout="Line Printed Output"># make Force object
# INPUTS : comps -&gt; force components ([fx,fy,fz]) in RF,
# x -&gt; 
# force application point (axial coordinate),
# obj -&gt; target object(beam),
# RF(optional_key)-&gt; 
# reference frame in which the force components are defined, 
# default(obj[frame])
MakeForce( comps_RF::list, x, obj::{BEAM, GROUND, ROD}, 
           { RF::FRAME := obj[frame] }, $ )</Text-field>
</Output>
</Group>
<Group labelreference="L24" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">MakeMoment := proc(comps_RF::list,x,obj::{BEAM,ROD,GROUND},{RF::FRAME:=obj[frame]},$)
    local M, comps;
    description &quot;make Moment object
                 INPUTS : comps -&gt; moment components ([mx,my,mz]) in RF,
                          x -&gt; moment application point (axial coordinate),
                          obj -&gt; target object(beam),
                          RF(optional_key)-&gt; reference frame in which the moment components are defined&quot;;

    comps := Project([op(comps_RF),0],RF,obj[frame])[1..3];
    if obj[type] = ROD then
        &quot;Moment cannot be applied to ROD&quot;;
    elif obj[type] = SUPORT or obj[type] = JOINT then
        if x&lt;&gt;0 then error &quot;supports and joints moments can only have 0 axial coordinate&quot;; end if;
    end if;
    M := table({type = 'MOMENT',
                components = comps, 
                coord = x,
                target = obj[name]});
end proc:

Describe(MakeMoment);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
# make Moment object
# INPUTS : comps -&gt; moment components ([mx,my,mz]) in RF,
# x 
# -&gt; moment application point (axial coordinate),
# obj -&gt; target object(beam),
# RF(optional_key)-&gt; 
# reference frame in which the moment components are defined
MakeMoment( comps_RF::list, x, obj::{BEAM, GROUND, ROD}, 
            { RF::FRAME := obj[frame] }, $ )</Text-field>
</Output>
</Group>
<Group labelreference="L28" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">MakeQLoad := proc(comps_RF::list,obj::{BEAM,ROD},x_min:=0,x_max:=obj[length],{RF::FRAME:=obj[frame]},$)
    local qx,qy,qz,q,comps;
    description &quot;make distributed load object
                 INPUTS : comps -&gt; q components ([qx,qy,qz]) in RF,
                          obj -&gt; target object(beam),
                          x_min -&gt; initial application point (axial coordinate),
                          x_max -&gt; final application point (axial coordinate),
                          RF(optional_key)-&gt; reference frame in which the load components are defined&quot;;

    comps := Project([op(comps_RF),0],RF,obj[frame])[1..3];
    if obj[type] = ROD then
        if comps[2]&lt;&gt;0 or comps[3]&lt;&gt;0 then error &quot;ROD elements accept only axial load&quot; end if;
    end if;
    qx := x -&gt; piecewise(x&gt;x_min and x&lt;x_max, comps[1], 0);
    qy := x -&gt; piecewise(x&gt;x_min and x&lt;x_max, comps[2], 0);
    qz := x -&gt; piecewise(x&gt;x_min and x&lt;x_max, comps[3], 0);
    q := table({type = 'QLOAD',
                components = &lt;qx,qy,qz&gt;,
                target = obj[name]});
end proc:


Describe(MakeQLoad);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
# make distributed load object
# INPUTS : comps -&gt; q components ([qx,qy,qz]) in 
# RF,
# obj -&gt; target object(beam),
# x_min -&gt; initial application point (axial 
# coordinate),
# x_max -&gt; final application point (axial coordinate),
# RF(optional_key)-&gt; 
# reference frame in which the load components are defined
MakeQLoad( comps_RF::list, obj::{BEAM, ROD}, x_min := 0, x_max := obj[length], 
           { RF::FRAME := obj[frame] }, $ )</Text-field>
</Output>
</Group>
<Group labelreference="L35" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">MakeSupport := proc(id::string,dof_constrained::list,objs::list({BEAM,ROD}),X::list,RF_::FRAME:=ground,$)
    local SUP, J_temp,i;
    global EARTH;
    description &quot;make support object
                 INPUTS : id -&gt; support name/identifier,
                          dof_constrained -&gt; constrained degree of freedom in RF, [TX,TY,TZ,RX,RY,RZ] 1-&gt; constrained, 0-&gt; free,
                          objs -&gt; target objects
                          x -&gt; list of support locations,
                          RF(optional) -&gt; frame in which the support is defined (default RF=ground)&quot;;
    
    for i from 1 to nops(objs) do
        if objs[i][type]=ROD and X[i]&lt;&gt;0 and X[i]&lt;&gt;objs[i][length] then error &quot;Supports can only be applied at extremes of ROD elements&quot; end if;
        if objs[i][type]=ROD and dof_constrained[4..6]&lt;&gt;[0,0,0] then error &quot;Rod supports can only have translational constraints&quot; end if;
    end do;
    SUP := table({type = 'SUPPORT',
                  dof_constr = dof_constrained, 
                  coords = [0,op(X)],
                  name = id,
                  frame = RF_,
                  targets = GetNames(objs),
                  variables = [],
                  forces = [],
                  moments = [],                  constraint_loads = [],
                  constraint_displacements = []                  });

    <Font foreground="[0,128,0]"># make the temporary joint</Font>
    J_temp := MakeJoint(id,dof_constrained,[EARTH,op(objs)],SUP[coords],RF_);

    SUP[variables] :=  J_temp[variables];
    SUP[forces] :=  J_temp[forces];
    SUP[moments] :=  J_temp[moments];    SUP[constraint_loads] :=  J_temp[constraint_loads];
    SUP[constraint_displacements] :=  J_temp[constraint_displacements];
    op(SUP);
end proc:

Describe(MakeSupport);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output"></Text-field><Text-field style="Line Printed Output" layout="Line Printed Output"># make support object
# INPUTS : id -&gt; support name/identifier,
# dof_constrained 
# -&gt; constrained degree of freedom in RF, [TX,TY,TZ,RX,RY,RZ] 1-&gt; constrained, 
# 0-&gt; free,
# objs -&gt; target objects
# x -&gt; list of support locations,
# RF(optional) 
# -&gt; frame in which the support is defined (default RF=ground)
MakeSupport( id::string, dof_constrained::list, objs::list({BEAM, ROD}), 
             X::list, RF_::FRAME := ground, $ )</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L130" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">MakeJoint := proc(id::string,dof_constrained::list,objs::list({BEAM,ROD}),X::list,RF_::FRAME:=objs[1][frame],$)
    local J, a, jj, j_vars, JF, JM,i,jf_comp, jm_comp,jf_comp_obj,jm_comp_obj,jm_indets,jf_indets,constraint;
    global EARTH;
    description &quot;make joint object
                 INPUTS : id -&gt; support name/identifier,
                          dof_constrained -&gt; constrained degree of freedom in RF, [TX,TY,TZ,RX,RY,RZ] 1-&gt; constrained, 0-&gt; free,
                          objs -&gt; target objects
                          x -&gt; list of support locations,
                          RF(optional) -&gt; frame in which the joint is defined (default RF=objs[1][frame])&quot;;


    for i from 1 to nops(objs) do
        if objs[i][type]=ROD and X[i]&lt;&gt;0 and X[i]&lt;&gt;objs[i][length] then error &quot;Supports can only be applied at extremes of ROD elements&quot; end if;
        if objs[i][type]=ROD and dof_constrained[4..6]&lt;&gt;[0,0,0] then error &quot;Rod supports can only have translational constraints&quot; end if;
    end do;

    J := table({type = 'JOINT',
                dof_constr = dof_constrained, 
                coords = X,
                name = id,
                frame = RF_,
                targets = GetNames(objs),
                variables = [],
                forces = [],
                moments = [],                constraint_loads = [],                constraint_displacements = []                });
    
    <Font foreground="[0,128,0]"># add all the bodies forces </Font>
    for i from 1 to nops(objs) do
        <Font foreground="[0,128,0]"># create force components compatible with supports dof_constrained </Font>
        jf_comp:=convert(&lt;JFx_||(J[name])||_||(objs[i][name]),
                          JFy_||(J[name])||_||(objs[i][name]),
                          JFz_||(J[name])||_||(objs[i][name])&gt; *~ &lt;op(dof_constrained[1..3])&gt;,list);
        <Font foreground="[0,128,0]"># project the force components into object frame and extract only the admissible loads </Font>
        jf_comp_obj:=convert(Project([op(jf_comp),0],RF_,objs[i][frame])[1..3].~&lt;op(objs[i][admissible_loads][1..3])&gt;,list);
        <Font foreground="[0,128,0]"># use the non admissible loads to build the loads constraint        </Font>constraint := convert(Project([op(jf_comp),0],RF_,objs[i][frame])[1..3].~&lt;op((-1*objs[i][admissible_loads][1..3])+~1)&gt;,list);        constraint := remove(x -&gt; x=0, constraint);        J[constraint_loads] := [op(J[constraint_loads]),op(constraint)];        <Font foreground="[0,128,0]"># extract the survived components        </Font>jf_indets := indets(jf_comp);
        #jf_indets := remove(x -&gt; x=0,subs(true=1,false=0,map2(has,jf_comp_obj,jf_comp).~jf_comp));        
        <Font foreground="[0,128,0]"># check if there are reactions
        </Font>if jf_comp_obj&lt;&gt;[0,0,0] then
            <Font foreground="[0,128,0]"># create the reaction force between support and obj 
            </Font>if<Font foreground="[0,128,0]"> </Font>objs[i] = EARTH then
                JF_||(id)||_||(objs[i][name]) := NULL;
                JF_||(objs[i][name])||_||(id) := MakeForce(-jf_comp_obj, 0, J, RF = objs[i][frame]);
            else
                JF_||(id)||_||(objs[i][name]) := MakeForce(jf_comp_obj, X[i], objs[i], RF = objs[i][frame]);
                JF_||(objs[i][name])||_||(id) := MakeForce(-jf_comp_obj, 0, J, RF = objs[i][frame]);
            end if;
            <Font foreground="[0,128,0]"># update support</Font>
            J[variables] := [op(J[variables]),op(jf_indets)];
            J[forces] := [op(J[forces]),JF_||(id)||_||(objs[i][name]),JF_||(objs[i][name])||_||(id)];
        end if;
    end do;
    <Font foreground="[0,128,0]"># add all the bodies moments</Font>
    for i from 1 to nops(objs) do
        <Font foreground="[0,128,0]"># create moment components compatible with joint dof_constrained</Font>
        jm_comp:=convert(&lt;JMx_||(J[name])||_||(objs[i][name]),
                          JMy_||(J[name])||_||(objs[i][name]),
                          JMz_||(J[name])||_||(objs[i][name])&gt; *~ &lt;op(dof_constrained[4..6])&gt;,list);
        <Font foreground="[0,128,0]"># project the moment components into object frame and extract only the admissible loads </Font>
        jm_comp_obj:=convert(Project([op(jm_comp),0],RF_,objs[i][frame])[1..3].~&lt;op(objs[i][admissible_loads][4..6])&gt;,list);
        <Font foreground="[0,128,0]"># use the non admissible loads to build the loads constraint
        </Font>constraint := convert(Project([op(jm_comp),0],RF_,objs[i][frame])[1..3].~&lt;op((-1*objs[i][admissible_loads][4..6])+~1)&gt;,list);
        constraint := remove(x -&gt; x=0, constraint);
        J[constraint_loads] := [op(J[constraint_loads]),op(constraint)];        <Font foreground="[0,128,0]"># extract the survived components        </Font>jm_indets := indets(jm_comp);
        #jm_indets := remove(x -&gt; x=0,subs(true=1,false=0,map2(has,jm_comp_obj,jm_comp).~jm_comp));
        <Font foreground="[0,128,0]"># check if there are reactions
        </Font>if jf_comp_obj&lt;&gt;[0,0,0] then
            <Font foreground="[0,128,0]"># create the reaction force between support and obj 
            </Font>if<Font foreground="[0,128,0]"> </Font>objs[i] = EARTH then
                JM_||(id)||_||(objs[i][name]) := NULL;
                JM_||(objs[i][name])||_||(id) := MakeMoment(-jm_comp_obj, 0, J, RF = objs[i][frame]);
            else
                JM_||(id)||_||(objs[i][name]) := MakeMoment(jm_comp_obj, X[i], objs[i], RF = objs[i][frame]);
                JM_||(objs[i][name])||_||(id) := MakeMoment(-jm_comp_obj, 0, J, RF = objs[i][frame]);
            end if;
            <Font foreground="[0,128,0]"># update support</Font>
            J[variables] := [op(J[variables]),op(jm_indets)];
            J[moments] := [op(J[moments]),JM_||(id)||_||(objs[i][name]),JM_||(objs[i][name])||_||(id)];
        end if;
    end do;

    op(J);
end proc:

Describe(MakeJoint);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output"></Text-field><Text-field style="Line Printed Output" layout="Line Printed Output"># make joint object
# INPUTS : id -&gt; support name/identifier,
# dof_constrained -&gt; 
# constrained degree of freedom in RF, [TX,TY,TZ,RX,RY,RZ] 1-&gt; constrained, 0-&gt; 
# free,
# objs -&gt; target objects
# x -&gt; list of support locations,
# RF(optional) -&gt; 
# frame in which the joint is defined (default RF=objs[1][frame])
MakeJoint( id::string, dof_constrained::list, objs::list({BEAM, ROD}), 
           X::list, RF_::FRAME := objs[1][frame], $ )</Text-field>
</Output>
</Group>
<Group labelreference="L116" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">MakeRod := proc(id::string,RF,L,A:=NULL,mat::MATERIAL:=NULL,$)
    local RD;
    description &quot;make rod object 
                 INPUTS : L -&gt; rod length,
                          A(optional) -&gt; rod cross-section area,
                          mat(optional) -&gt; rod material,
                 NB: the rod starts at x=0, no loads or supports can be applied with negative x&quot;;
    RD := table({type = 'ROD',
                 name = id, 
                 length = L,
                 cs_area = A,
                 internal_actions = [],
                 material = mat,
                 frame = RF,
                 admissible_loads = [1,0,0,0,0,0]});
end proc:

Describe(MakeRod);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output"></Text-field><Text-field style="Line Printed Output" layout="Line Printed Output"># make rod object INPUTS : L -&gt; rod length,
# A(optional) -&gt; rod cross-section 
# area,
# mat(optional) -&gt; rod material,
# NB: the rod starts at x=0, no loads or 
# supports can be applied with negative x
MakeRod( id::string, RF, L, A := NULL, mat::MATERIAL := NULL, $ )</Text-field>
</Output>
</Group>
<Group labelreference="L57" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">MakeBeam := proc(id::string,RF,L,A:=NULL,I_xx:=NULL,I_yy:=NULL,I_zz:=NULL,a:=NULL,b:=NULL,mat::MATERIAL:=NULL,$)
    local BM;
    description &quot;make beam object 
                 INPUTS : L -&gt; beam length,
                          L -&gt; beam length,
                          I_xx,I_yy,I_zz(optional) -&gt; beam cross-section inertias,
                          a,b(optional) -&gt; beam cros section maximum dimensions (a-&gt;Y_dimension, b-&gt;Z_dimension),
                          mat(optional) -&gt; beam material
                 NB: the beam starts at x=0, no loads or supports can be applied with negative x&quot;;
    BM := table({type = 'BEAM',
                 name = id,
                 length = L, 
                 cs_area = A,
                 cs_inertias = [I_xx,I_yy,I_zz],
                 cs_dimensions = [a,b],
                 internal_actions = [],
                 material = mat,
                 frame = RF,
                 admissible_loads = [1,1,1,1,1,1]});
end proc:

Describe(MakeBeam);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output"></Text-field><Text-field style="Line Printed Output" layout="Line Printed Output"># make beam object INPUTS : L -&gt; beam length,
# L -&gt; beam length,
# I_xx,I_yy,I_zz(optional) 
# -&gt; beam cross-section inertias,
# a,b(optional) -&gt; beam cros section maximum 
# dimensions (a-&gt;Y_dimension, b-&gt;Z_dimension),
# mat(optional) -&gt; beam material
# NB: 
# the beam starts at x=0, no loads or supports can be applied with negative x
MakeBeam( id::string, RF, L, A := NULL, I_xx := NULL, I_yy := NULL, 
          I_zz := NULL, a := NULL, b := NULL, mat::MATERIAL := NULL, $ )</Text-field>
</Output>
</Group>
<Group labelreference="L154" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">MakeStructure := proc(objs::{list({BEAM,ROD,SUPPORT,JOINT}),set({BEAM,ROD,SUPPORT,JOINT})},ext::{list({FORCE,MOMENT,QLOAD}),set({FORCE,MOMENT,QLOAD})}:=[],hyper::{list,set}:=[],{dim::string:=&quot;3D&quot;},$)
    local STR,dof_,i,names;
    description &quot;make Structure object
                 INPUTS : objects -&gt; list/set of structure objects (BEAM,ROD,SUPPORT,JOINT),
                          external_actions -&gt; list/set of external forces,moments or distributed loads,
                          hyper -&gt;  list/set of hyperstatic variables (if them exists),
                          {TWOD=true/false} -&gt; option for 2D structure (default = false), in 2D structures all the out of plane (XY) forces are neglected&quot;;
    
    <Font foreground="[0,128,0]"># name check</Font>
    names := [];
    for i from 1 to nops(objs) do
        if member(objs[i][name],names) then error &quot;Duplicate names found check components names&quot;; end if;
        names := [op(names),objs[i][name]];
    end do;
    
    dof_ := ComputeDOF(objs,dim);
    
    if dof_ &lt; 0 then
        WARNING(&quot;the structure is hyperstatic with %1 overconstraned directions, please check the structure supports and joints or define the hyperstatic variables by adding as 3rd argument of the MakeStructure method or simply defining STR[hyperstatic_vars] in an existing structure&quot;),abs(dof_);
    elif dof_ &gt; 0 then 
        error &quot;not enough constraint in the structure&quot;;
    else
<Font encoding="UTF-8">        printf(&quot;isostatic structure detected\134n&quot;);
</Font>    end if;   

    STR := table({type = 'STRUCTURE',
                  objects = objs, 
                  external_actions = ext,
                  DOF = dof_,
                  hyperstatic_variables = [],
                  dimensions = dim});
end proc:

Describe(MakeStructure);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
# make Structure object
# INPUTS : objects -&gt; list/set of structure objects 
# (BEAM,ROD,SUPPORT,JOINT),
# external_actions -&gt; list/set of external 
# forces,moments or distributed loads,
# hyper -&gt; list/set of hyperstatic 
# variables (if them exists),
# {TWOD=true/false} -&gt; option for 2D structure 
# (default = false), in 2D structures all the out of plane (XY) forces are 
# neglected
MakeStructure( objs::{list({BEAM, JOINT, ROD, SUPPORT}), set({BEAM, JOINT, 
                 ROD, SUPPORT})}, 
               ext::{list({FORCE, MOMENT, QLOAD}), set({FORCE, MOMENT, 
                 QLOAD})} := [], 
               hyper::{list, set} := [], 
               { dim::string := &quot;3D&quot; }, $ )</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L158" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">ComputeDOF := proc(objs::{list({BEAM,ROD,SUPPORT,JOINT}),set({BEAM,ROD,SUPPORT,JOINT})},dim::string,$)
    local DOF,i,j,vertex,id_tar,id_tar1,id_tar2,G,k;
    description &quot;compute the degree of freedom of the input objects&quot;;
    
    DOF := 0;
    <Font foreground="[0,128,0]"># built structure connections graph</Font>
    vertex := [];
    printf(&quot;checking structure connections: &quot;);
    for i from 1 to nops(objs) do	
        vertex := [op(vertex),objs[i][name]];
    end do;
    G:= GraphTheory[Graph](vertex);
    for i from 1 to nops(objs) do	
        if objs[i][type] = SUPPORT or objs[i][type] = JOINT then
            for j from 1 to nops(objs) do 
                if member(objs[j][name],objs[i][targets]) then 
                GraphTheory[AddEdge](G,{objs[i][name],objs[j][name]}); 
                end if; 
            end do;
        end if;
    end do;

    <Font foreground="[0,128,0]"># connections check</Font>
    print( GraphTheory[DrawGraph](G) );
    if GraphTheory[IsConnected](G) then 
<Font encoding="UTF-8">        printf(&quot;PASSED\134n&quot;);
</Font>    else 
        error &quot;unconnected elements in the structure&quot;;
    end if;
    
    printf(&quot;computing degree of freedoms: &quot;);
    for i from 1 to nops(objs) do
        if objs[i][type] = BEAM  then
            if dim = &quot;2D&quot; then
                DOF := DOF + 3;
            else
                DOF := DOF + 6;
            end if;
        elif objs[i][type] = ROD then
            if dim = &quot;2D&quot; then
                DOF := DOF + 3;
            else
                DOF := DOF + 5;
            end if;
        elif objs[i][type] = JOINT then
            if dim = &quot;2D&quot; then
                DOF := DOF - add(objs[i][dof_constr][k],k=[1,2,6])*(nops(objs[i][targets])-1);
            else
                DOF := DOF - add(objs[i][dof_constr][k],k=1..6)*(nops(objs[i][targets])-1);
            end if;
        elif objs[i][type] = SUPPORT then
            if dim = &quot;2D&quot; then
                DOF := DOF - add(objs[i][dof_constr][k],k=[1,2,6])*(nops(objs[i][targets]));
            else
                DOF := DOF - add(objs[i][dof_constr][k],k=1..6)*(nops(objs[i][targets]));
            end if;
        end if;
    end do;
    <Font encoding="UTF-8">printf(&quot;%d DOF \134n&quot;,DOF);</Font>
    
    return DOF;
end proc:

Describe(ComputeDOF);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
# compute the degree of freedom of the input objects
ComputeDOF( objs::{list({BEAM, JOINT, ROD, SUPPORT}), set({BEAM, JOINT, ROD, 
              SUPPORT})}, 
            dim::string, $ )</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L55" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">NE_equilibrium := proc( FMQ::{list({FORCE,MOMENT,QLOAD}),set({FORCE,MOMENT,QLOAD})}, obj::{BEAM,ROD,SUPPORT,JOINT}, pole,dim::string,{UP_TO:=obj[length]}, $)
    local eq_T, eq_R, NE_eq, i, comp;
    description &quot;compute the Newton-Euler static equilibrium equations given a set of Forces-Moments-QLoads and the axial coordinate of the pole&quot;;
    
    <Font foreground="[0,128,0]"># 2D case</Font>
    if dim = &quot;2D&quot; then 
        eq_T := [0,0];
        for i from 1 to nops(FMQ) do
            comp := convert(FMQ[i][components],list);
            if FMQ[i][target] = obj[name] then 
                if (FMQ[i][type]=FORCE) then 
                   eq_T := eq_T + comp[1..2] ;
                elif (FMQ[i][type]=QLOAD) then 
                    eq_T := eq_T + map(integrate, comp[1..2](x),x=0..UP_TO);
                end if;
            else
                WARNING(&quot;%1 is not applied to %2&quot;, FMQ[i], obj);
            end if;
        end do;

        eq_R := [0];
        for i from 1 to nops(FMQ) do
            comp := convert(FMQ[i][components],list);
            if FMQ[i][target] = obj[name] then 
                if (FMQ[i][type]=MOMENT) then 
                    eq_R := eq_R + comp[3] ;
                elif (FMQ[i][type]=FORCE) then 
                eq_R := eq_R + [comp[2]] *~ (FMQ[i][coord] - pole);
                elif (FMQ[i][type]=QLOAD) then 
                    eq_R := eq_R + map(integrate, [comp[2](x)*~(x-pole)], x=0..UP_TO);
                end if;
            else
                WARNING(&quot;%1 is not applied to %2&quot;, FMQ[i], obj);
            end if;
        end do;
    
    <Font foreground="[0,128,0]"># 3D case</Font>
    else
        eq_T := [0,0,0];
        for i from 1 to nops(FMQ) do
            comp := convert(FMQ[i][components],list);
            if FMQ[i][target] = obj[name] then 
                if (FMQ[i][type]=FORCE) then 
                   eq_T := eq_T + comp ;
                elif (FMQ[i][type]=QLOAD) then 
                    eq_T := eq_T + map(integrate, comp(x),x=0..UP_TO);
                end if;

            else
                WARNING(&quot;%1 is not applied to %2&quot;, FMQ[i], obj);
            end if;
        end do;

        eq_R := [0,0,0];
        for i from 1 to nops(FMQ) do
            comp := convert(FMQ[i][components],list);
            if FMQ[i][target] = obj[name] then 
                if (FMQ[i][type]=MOMENT) then 
                    eq_R := eq_R + comp ;
                elif (FMQ[i][type]=FORCE) then 
                eq_R := eq_R + [0,-comp[3],comp[2]] *~ (FMQ[i][coord] - pole);
                elif (FMQ[i][type]=QLOAD) then 
                    eq_R := eq_R + map(integrate, [0,(-comp[3](x)*~(x-pole)),comp[2](x)*~(x-pole)], x=0..UP_TO);
                end if;
            else
                WARNING(&quot;%1 is not applied to %2&quot;, FMQ[i], obj);
            end if;
        end do;
    end if;   
     
    NE_eq := [op(eq_T),op(eq_R)];
end proc:

Describe(NE_equilibrium);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
# compute the Newton-Euler static equilibrium equations given a set of 
# Forces-Moments-QLoads and the axial coordinate of the pole
NE_equilibrium( FMQ::{list({FORCE, MOMENT, QLOAD}), set({FORCE, MOMENT, 
                  QLOAD})}, 
                obj::{BEAM, JOINT, ROD, SUPPORT}, pole, dim::string, 
                { UP_TO := obj[length] }, $ )</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L151" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">SolveStructure := proc(struct::STRUCTURE,{compute_intact := 0, compute_disp := 0, compute_stress := 0},$)
    local i,g_load,S_obj,S_ext,S_con,S_con_forces,vars,eq,sol,obj;
    global _gravity, ground, EARTH;
    description &quot;Solve the Structure
                 INPUTS : Structure object,
                 OUTPUTS: reactions_solutions(list) (supports and joints forces), 
                          reactions FORCES set of FORCE/MOMENT objects,
                          if compute_intact -&gt;update of the internal actions of the structure objects,
                          if compute_disp -&gt; update of the displacement of the structure objects,
                          if compute_stress -&gt; update of the max_VM_stress of the structure objects&quot;;
    
    <Font foreground="[0,128,0]"># parsing inputs
    </Font>S_obj := {};
    S_ext := {};
    S_con := {};
    S_con_forces := {};
    vars := [];
    for i from 1 to nops(struct[objects]) do
        obj:=struct[objects][i];
        if obj[type] = BEAM or obj[type] = ROD or obj[type] = SUPPORT or obj[type] = JOINT then
            S_obj := {op(S_obj),obj};
        end if;
        if obj[type] = SUPPORT then
            S_con := {op(S_con),obj};
            S_con_forces := {op(S_con_forces),op(obj[forces]),op(obj[moments])};
            vars := [op(vars),op(obj[variables])];
        end if;
        if obj[type] = JOINT then
            S_con := {op(S_con),obj};
            S_con_forces := {op(S_con_forces),op(obj[forces]),op(obj[moments])};
            vars := [op(vars),op(obj[variables])];
        end if;
        unassign('obj');
    end do;

    S_ext := struct[external_actions];

    <Font foreground="[0,128,0]"># add gravity distributed load</Font>
    if _gravity &lt;&gt; [0,0,0] then
        for i from 1 to nops(S_obj) do
            if struct[i][type] = BEAM then
                g_load := MakeQLoad(_gravity*S_obj[i][cs_area]*S_obj[i][material][density],S_obj[i],RF=ground);
                S_ext := {op(S_ext),g_load};
            end if;
        end do;
    end if; 

    if struct[DOF] = 0 then
        <Font foreground="[0,128,0]"># solve isostatic structure</Font>
<Font encoding="UTF-8">        printf(&quot;Solving the ISOSTATIC structure\134n&quot;);
</Font>        sol:=IsostaticSolver(S_obj,{op(S_ext),op(S_con_forces)},vars,struct[dimensions]);
        <Font foreground="[0,128,0]"># update EARTH reactions property</Font>
        printf(&quot;updating EARTH reactions fields&quot;);
        EARTH[reactions] := subs(sol,EARTH[reactions]);
    elif struct[DOF] &lt; 0 then 
        <Font foreground="[0,128,0]"># solve hyperstatic structure</Font>
        if nops(struct[hyperstatic_variables]&lt;&gt;abs(DOF)) then error &quot;mismatch in DOF of the structure, check the hyperstatic variables of the structure and update the structure object&quot;; 
        end if;
        
    end if;
    
    if _nresults &lt;= 1 then
        return sol;
    elif _nresults = 2 then
        return sol, R_forces;
    else
        error &quot;wrong lhs in assignment&quot;;
    end if;
end proc:

Describe(SolveStructure);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output"></Text-field><Text-field style="Line Printed Output" layout="Line Printed Output"># Solve the Structure
# INPUTS : Structure object,
# OUTPUTS: 
# reactions_solutions(list) (supports and joints forces), reactions FORCES set 
# of FORCE/MOMENT objects,
# if compute_intact -&gt;update of the internal actions 
# of the structure objects,
# if compute_disp -&gt; update of the displacement of 
# the structure objects,
# if compute_stress -&gt; update of the max_VM_stress of 
# the structure objects
SolveStructure( struct::STRUCTURE, 
                { compute_disp := 0, compute_intact := 0, 
                  compute_stress := 0 }, $ )</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L185" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">IsostaticSolver := proc(objs::{list({BEAM,ROD,SUPPORT,JOINT}),set({BEAM,ROD})},FMQ::{list({FORCE,MOMENT,QLOAD}),set({FORCE,MOMENT,QLOAD})},vars::list,dim::string,$)
    local eq,i,j,active_FMQ,sol,A,B,rank_eq,vars2;
    description &quot;solve isostatic structures&quot;;
    
    <Font foreground="[0,128,0]"># compute equations</Font>
    <Font encoding="UTF-8">printf(&quot;computing the equilibrium equation for the isostatic structure\134n&quot;);</Font>
    eq:=[];
    for i from 1 to nops(objs) do
        active_FMQ := {};
        for j from 1 to nops(FMQ) do
            if FMQ[j][target] = objs[i][name] then
                active_FMQ := {op(active_FMQ), FMQ[j]};
            end if;
        end do;        eq := [op(eq), op(NE_equilibrium(active_FMQ,objs[i],0,dim))];
        <Font foreground="[0,128,0]"># add joints and supports constraint equations
</Font>        if objs[i][type] = SUPPORT or objs[i][type] = JOINT then<Font foreground="[0,128,0]">            </Font>eq := [op(eq),op(objs[i][constraint_loads])];        end if;    end do;
    <Font foreground="[0,128,0]"># remove NULL equations</Font>
    eq := remove(x -&gt; x = 0 , simplify(eq));    <Font foreground="[0,128,0]">#remove non used variables
    </Font>vars2 := vars;<Font foreground="[0,128,0]">
</Font>    for i from 1 to nops(vars) do
        if (has(eq,vars[i])) = false then
            vars2 := remove(x -&gt; x = vars[i], vars2);
            WARNING(&quot;%1 was removed from variables because it is not used in the equations&quot;,vars[i]);
        end if; 
    end do;
    <Font foreground="[0,128,0]">#equations check;</Font>
    A,B := LinearAlgebra[GenerateMatrix](eq,vars2);
    rank_eq := LinearAlgebra[Rank](A);
    <Font encoding="UTF-8">printf(&quot;structure equilibrium equations:\134n&quot;);</Font>
    print(&lt;op(eq)&gt;);
<Font encoding="UTF-8">    printf(&quot;structure unknown variables:\134n&quot;);
</Font>    print(vars2);
    if rank_eq &lt;&gt; nops(vars2) then error &quot;inconsistent system of equation, got %1 independent equations and %2 variables, check structure supports and joints&quot;, rank_eq, nops(vars2); end if;
    <Font foreground="[0,128,0]"># Solve</Font>
<Font encoding="UTF-8">    printf(&quot;solving the structure reaction forces\134n&quot;);</Font>
    sol := simplify(op(solve(eq,vars2)));
    <Font encoding="UTF-8">printf(&quot;---DONE---\134n&quot;);</Font>
    
    return sol;
end proc:

Describe(IsostaticSolver);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output"></Text-field><Text-field style="Line Printed Output" layout="Line Printed Output"># solve isostatic structures
IsostaticSolver( objs::{list({BEAM, JOINT, ROD, SUPPORT}), set({BEAM, ROD})}, 
                 FMQ::{list({FORCE, MOMENT, QLOAD}), set({FORCE, MOMENT, 
                   QLOAD})}, 
                 vars::list, dim::string, $ )</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L3" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Reactions := proc(obj::{BEAM,ROD}, FMQ::{list({FORCE,MOMENT,QLOAD}),set({FORCE,MOMENT,QLOAD})}, SUP::{list(SUPPORT),set(SUPPORT)}, pole, dim::string ,$)
    local RR, RF, RM, RR_sol, r_sol, r_vars, NE_equations, rr,
          TOT_SUP,dof,i,tmp_ry,tmp_rz;
    description &quot;Returns the reaction forces
                 CONVENTION: x points right and is the axial coordinate
                             y points upwards 
                             z points right between your fuking eyes
                 INPUTS : obj  -&gt; object,
                          FMQ  -&gt; list of forces,moments and distributed load, 
                          SUP  -&gt; list of supports ([SUP1,SUP2]),
                          pole -&gt; pole for Euler equation computation,
                 OUTPUTS: Reaction_forces(FORCE) , reactions_solutions(list)&quot;;
    
    <Font foreground="[0,128,0]">#check supports </Font>
    printf(&quot;supports check: &quot;);
    dof := 6;
    tmp_ry := 0;
    tmp_rz := 0;
    TOT_SUP := [0,0,0,0,0,0];
    for i from 1 to nops(SUP) do
        tmp_ry := tmp_ry + SUP[i][dof_constr][3];
        tmp_rz := tmp_rz + SUP[i][dof_constr][2];
        TOT_SUP := TOT_SUP+SUP[i][dof_constr];
    end do;
    TOT_SUP := TOT_SUP + [0, 0, 0, max(tmp_ry-1,0), max(tmp_rz-1,0), 0];
    dof := dof - add(TOT_SUP[n],n=1..6);
<Font encoding="UTF-8">    if dof = 0 then printf(&quot;PASSED\134n&quot;) else error &quot;wrong supports!, computed dof = &quot;, dof; end if;
</Font>    
    <Font foreground="[0,128,0]"># create reaction forces</Font>
    r_vars := [];
    RF:= [];
    RM:= [];
    for i from 1 to nops(SUP) do
        RF := [op(RF), op(SUP[i][forces])];
        RM := [op(RM), op(SUP[i][moments])];
        r_vars := [op(r_vars), op(SUP[i][variables])];
    end do;
    print(&quot;Reaction variables&quot;, r_vars);
    RR := {op(RF),op(RM)};
    <Font foreground="[0,128,0]"># solve for the reaction forces</Font>
<Font encoding="UTF-8">    printf(&quot;computing the static equilibrium equation\134n&quot;);
</Font>    NE_equations := NE_equilibrium({op(FMQ),op(RR)},obj,pole,dim);
    remove(x -&gt; x = 0 , NE_equations);
    print(&lt;NE_equations&gt;);
    <Font encoding="UTF-8">printf(&quot;solving reaction forces\134n&quot;);</Font>
    r_sol := op(solve(NE_equations,r_vars));
    RR_sol := seq(subs(r_sol,op(RR[i])),i=1..nops(RR_sol));
    <Font encoding="UTF-8">printf(&quot;---DONE---\134n&quot;);
</Font>    
    if _nresults &lt;= 1 then
        return RR_sol;
    elif _nresults = 2 then
        return RR_sol, r_sol;
    else
        error &quot;wrong lhs in assignment&quot;;
    end if;
end proc:

Describe(Reactions);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">
# Returns the reaction forces
# CONVENTION: x points right and is the axial 
# coordinate
# y points upwards z points right between your fuking eyes
# INPUTS : 
# obj -&gt; object,
# FMQ -&gt; list of forces,moments and distributed load, SUP -&gt; 
# list of supports ([SUP1,SUP2]),
# pole -&gt; pole for Euler equation computation,
# OUTPUTS: 
# Reaction_forces(FORCE) , reactions_solutions(list)
Reactions( obj::{BEAM, ROD}, 
           FMQ::{list({FORCE, MOMENT, QLOAD}), set({FORCE, MOMENT, QLOAD})}, 
           SUP::{list(SUPPORT), set(SUPPORT)}, pole, dim::string, $ )</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L85" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">InternalActions := proc(obj::{BEAM,ROD}, FMQ::{list({FORCE,MOMENT,QLOAD}),set({FORCE,MOMENT,QLOAD})},$)
    local IA, IAF, IAM, IA_sol, ia_sol, ia_vars, NE_equations, x, balance;
    description &quot;compute the internal actions of a beam element
                 returns IA as function of 'x' (axial variable)
                 INPUTS : obj  -&gt; object,
                          FMQ  -&gt; list of forces,moments and distributed load&quot;;
    
    printf(&quot;Checking actions balance: &quot;);
    balance := simplify(NE_equilibrium({op(FMQ)},obj,0));
    if balance[1]&lt;&gt;0 or balance[1]&lt;&gt;0 or balance[1]&lt;&gt;0 or balance[1]&lt;&gt;0 or balance[1]&lt;&gt;0 or balance[1]&lt;&gt;0 then
       error &quot;truss not balanced, equilibrium: %1&quot;, balance;
    else
<Font encoding="UTF-8">        printf(&quot;OK\134n&quot;);
</Font>    end if:
    
    <Font foreground="[0,128,0]"># create internal action dummy forces</Font>
    ia_vars := [N,Ty,Tz,Mx,My,Mz];
    IAF := MakeForce(ia_vars[1..3], x, obj);
    IAM := MakeMoment(ia_vars[4..6], x, obj);
    print(&quot;Internal actions&quot;, ia_vars);
    IA := {op(IAF),op(IAM)};
    <Font foreground="[0,128,0]"># solve for the reaction forces</Font>
<Font encoding="UTF-8">    printf(&quot;computing the internal actions\134n&quot;);
</Font>    NE_equations := NE_equilibrium({op(FMQ),op(IA)},obj,x,UP_TO = x);
    ia_sol := simplify(op(solve(NE_equations,ia_vars)));
    <Font encoding="UTF-8">printf(&quot;updating %s object\134n&quot;, obj[type]);</Font>
    obj[internal_actions] := &lt;map(rhs,ia_sol)&gt;;
    <Font encoding="UTF-8">printf(&quot;---DONE---\134n&quot;);
</Font>    
    return ia_sol;
end proc:

Describe(InternalActions);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output"></Text-field><Text-field style="Line Printed Output" layout="Line Printed Output"># compute the internal actions of a beam element
# returns IA as function of 'x' 
# (axial variable)
# INPUTS : obj -&gt; object,
# FMQ -&gt; list of forces,moments and 
# distributed load
InternalActions( obj::{BEAM, ROD}, 
                 FMQ::{list({FORCE, MOMENT, QLOAD}), set({FORCE, MOMENT, 
                   QLOAD})}, 
                 $ )</Text-field>
</Output>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Test 1 structure solver (rods 2D)</Text-field></Title>
<Group hide-input="false" labelreference="L198" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">L_rod := 1;</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEmTF9yb2RGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkjbW5HRiQ2JFEiMUYnRjlGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSZMX3JvZEdGKCIiIjcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L216" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF1 := Rotate('Z',-Pi/4):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L192" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">R0 := MakeRod(&quot;R0&quot;,ground,L_rod):
R1 := MakeRod(&quot;R1&quot;,RF1,L_rod):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L190" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">S_rod0 := MakeSupport(&quot;S_r0&quot;,[1,1,1,0,0,0],[R0],[0]):
S_rod1 := MakeSupport(&quot;S_r1&quot;,[1,1,1,0,0,0],[R1],[0]):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L217" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">J:=MakeJoint(&quot;J&quot;,[1,1,1,0,0,0],[R0,R1],[L_rod,L_rod]) :</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L194" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">F := MakeForce([0,f1y,0],0,J):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L199" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">STR := MakeStructure({R0,R1,J,S_rod0,S_rod1},{F},dim=&quot;2D&quot;);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">checking structure connections: </Text-field>
</Output>
<Output><Text-field style="Maple Plot" layout="Maple Plot"><Plot height="400.0" type="two-dimensional" width="400.0" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" gridlinevisibility="1" legendvisibility="false">NjctJSlQT0xZR09OU0c2JjdgcTckJCIxJEglKVx0Kj4mRyYhIzskIiM1ISIiNyQkIjEjb015PnJYRyYhIzskIjIlZk9vNkMqPSsiISM7NyQkIjEzJFt0Zi5JRyYhIzskIjJYWSMqZVxLTisiISM7NyQkIjFQVExeRjYhRyYhIzskIjJFUVckKWVpYCsiISM7NyQkIjFQUWM7KTNnRiYhIzskIjJLWHVxJD49MjUhIzs3JCQiMXlQOjBDdnFfISM7JCIyKEdqJmY6aSozNSEjOzckJCIxMVExLlImW0UmISM7JCIyamRZTiopeTAsIiEjOzckJCIxJD5jck9JeEQmISM7JCIyZV9pcUU3QSwiISM7NyQkIjElKVtTO19JXF8hIzskIjJwOXUyR15RLCIhIzs3JCQiMWAhKVwwNigpUl8hIzskIjIjZW8nKilbRmEsIiEjOzckJCIxekcjPjZIIkhfISM7JCIycztzQyg+KXAsIiEjOzckJCIxOHpmTEckKT1fISM7JCIyQzZbamoqRz01ISM7NyQkIjFcX05wPE4xXyEjOyQiMVwxJyo0cW8+NSEjOjckJCIwIjRecE0jSD4mISM6JCIyLGEjPkNZK0A1ISM7NyQkIjFjXXE+eT16XiEjOyQiMi11IipHKHo9QTUhIzs3JCQiMSlRYThsJjNtXiEjOyQiMnkuMVwrJj1CNSEjOzckJCIxa255NCMqeVxeISM7JCIyTyI+LV4ocFUtIiEjOzckJCIxbUgieWxHYTgmISM7JCIyMXEvZlIqNEQ1ISM7NyQkIjFUJjRwN14iPV4hIzskIjJBdlNQXWRmLSIhIzs3JCQiMWhgYHVSUy1eISM7JCIwUU4iKTQ9bS0iISM5NyQkIjE5VGpDbXElMyYhIzskIjJYdmAoM0lCRjUhIzs3JCQiMTF3JmVrOHYxJiEjOyQiMjolUSd6TTR4LSIhIzs3JCQiMUQhKj0jKlJIXF0hIzskIjJ5Rk5VdSE0RzUhIzs3JCQiMTZlb0FlUEtdISM7JCIyTCY0dTdjTEc1ISM7NyQkIjFKQTklcCkqUiwmISM7JCIyN20ydGYmW0c1ISM7NyQkIjFfWF5CIlxbKlwhIzskIjB1QzxLOiZHNSEjOTckJCIxYDVCVV8+eVwhIzskIjItPjt6XE8lRzUhIzs3JCQiMSkpXEcmKlJIZ1whIzskIjJGJHAxQ0FDRzUhIzs3JCQiMU8yeCZIbj4lXCEjOyQiMjpHPFlJQnotIiEjOzckJCIyYFdjbWN3VSNcISM8JCIxVms/T2pcRjUhIzo3JCQiMUdWZ0VFWDJcISM7JCIyZVZZSGp3cC0iISM7NyQkIjFAIWUoUSYpPSopWyEjOyQiMlgqKTNTQHppLSIhIzs3JCQiMFQ7TDs+SyhbISM6JCIxbDgnXDZaYi0iISM6NyQkIjFDS0s9NHFjWyEjOyQiMlRjTy1fZVktIiEjOzckJCIxWidvaUxtQSVbISM7JCIyWkwkXCk0aFAtIiEjOzckJCIyT3VdRkxHciNbISM8JCIxS3IpW2Akb0E1ISM6NyQkIjJXeUJuZ2BOIlshIzwkIjInbyUpeT47ZUA1ISM7NyQkIjFpIzNxJFI2K1shIzskIjEoKXlhb0pNPzUhIzo3JCQiMVIjbztNbnh5JSEjOyQiMjxEYSRlOjA+NSEjOzckJCIxLUdcUFx0dlohIzskIjIocCg9d0s+dywiISM7NyQkIjFVKXlPeGRddyUhIzskIjIlZktzIT5vaCwiISM7NyQkIjF1dDBoKDNediUhIzskIjIzYFVNXjxZLCIhIzs3JCQiMSR5W2pNXml1JSEjOyQiMWZ2RjclPkksIiEjOjckJCIwUiF6OihIIVJaISM6JCIyPSp6VF5PXTY1ISM7NyQkIjEnPSkqXGltPXQlISM7JCIyZSNHYTF4cjQ1ISM7NyQkIjFjbEImNCRcRVohIzskIjIlNCVHQGgjMzM1ISM7NyQkIjJ3RyhbI1JoPXMlISM8JCIuNEwpcEkxNSEjNzckJCIyZG9pKVFsXT1aISM8JCIxJSl6LERIZS81ISM6NyQkIjBCQCMpb0tnciUhIzokIjFPUycqKVxbRSsiISM6NyQkIjFXWSZmI0gnXHIlISM7JCIyLUQmSCY0ajQrIiEjOzckJCIxJCpRc1MoZlxyJSEjOyQiMWFqUyR5ai8qKiohIzs3JCQiMi8uIUg6JHlnciUhIzwkIjFDNz4hR0lJKCoqISM7NyQkIjFOXzsmXEAmPVohIzskIjFzQj96KnlTJioqISM7NyQkIjEqR1thYFg7cyUhIzskIjE8KWYibygqKXkkKiohIzs3JCQiMjoyMio+ZUxFWiEjPCQiMVFdTSoqenE+KiohIzs3JCQiMmFYaEorJCo+dCUhIzwkIjF5LTRNXFotKiohIzs3JCQiMkVXNkFUSChRWiEjPCQiMXciKTR1cmsmKSkqISM7NyQkIjFKSyI9aCFcWVohIzskIjF5L14qZlMkcCkqISM7NyQkIjFuJnlYVy9cdiUhIzskIjF4KmV1cW5UJikqISM7NyQkIjElKlxOSyM+XXclISM7JCIxOSIqKj42dSRRKSohIzs3JCQiMic9WUMoejBjeCUhIzwkIjExX0FBNyhSIykqISM7NyQkIjIyJzQxaikpcCh5JSEjPCQiMSYpW2dHMmM0KSohIzs3JCQiMXRvLiUzVyUqeiUhIzskIjFHYj5uJ0dzeiohIzs3JCQiMEJDRihbRDhbISM6JCIxWEp3VkFXJXkqISM7NyQkIjE6VT15bENGWyEjOyQiMHVdWmV1SXgqISM6NyQkIjEzYnUnKj4qPSVbISM7JCIwWjAoUXpqaSgqISM6NyQkIjE8MCRHW2Z5JlshIzskIjAjKlFzOVhGdiohIzo3JCQiMWBXZ1VLNnRbISM7JCIxTC1GVTllVygqISM7NyQkIjFVa3Z5Jz0jKilbISM7JCIxaV0jRzomPlAoKiEjOzckJCIyLjZ0QDYmXDJcISM8JCIwLWwqKTQ+LXQqISM6NyQkIjElWyhbTTJVQ1whIzskIjBYV2IocCpccyohIzo3JCQiMSl5L0hPSj8lXCEjOyQiMWAuXFlPdj8oKiEjOzckJCIyJz1lIilbLj1nXCEjPCQiMWk/SmdQZjwoKiEjOzckJCIxQjNWYjYseFwhIzskIjFWITRkSEdkciohIzs3JCQiMSNIZyVcKy8mKlwhIzskIjFYPyp5UlZbciohIzs3JCQiMSdlIykpSDomSCwmISM7JCIxOVA3JlwlNDooKiEjOzckJCIxJz1MSShHMEtdISM7JCIxWy9IZnJnOygqISM7NyQkIjEoZkZDZyJ6W10hIzskIjExeWZnWys+KCohIzs3JCQiMSJ5SW55KCl5MSYhIzskIjBiOHMleipIcyohIzo3JCQiMXUjeUxTXVszJiEjOyQiMSZmLmNuOXhzKiEjOzckJCIxXEIlbylmSixeISM7JCIxa0JWLElTTCgqISM7NyQkIjFUJW8xSSlmPV4hIzskIjE8MGpvKkcxdSohIzs3JCQiMHUuKClvTmE4JiEjOiQiL090TSk0IVwoKiEjOTckJCIxeTBAT2BDXV4hIzskIjF5JVttZiVlZCgqISM7NyQkIjEuRCkqKTR6YDsmISM7JCIxKCkpZSFRYWtuKCohIzs3JCQiMWxsclE3XXpeISM7JCIxMDpEXlBQeSgqISM7NyQkIjFiSSdvM0NTPiYhIzskIjFcI1tnKipwNHoqISM7NyQkIjFrTFVYNyllPyYhIzskIjEoSFVAKnlqLSkqISM7NyQkIjFvUTlJSWo9XyEjOyQiMChmaVJbJ28iKSohIzo3JCQiMUQnUUdwRShIXyEjOyQiMSI0ay9hKik0JCkqISM7NyQkIjFAISlHTGEiKVJfISM7JCIwWGlRZVFjJSkqISM6NyQkIjFoeTEnR3kqW18hIzskIjBQaiYpUSs0JykqISM6NyQkIjAsZio+V0tkXyEjOiQiMTY/bWpVLXgpKiEjOzckJCIxTmBuaz4ubF8hIzskIjEjb3BYJnpsJSopKiEjOzckJCIxdTVcKkdSNUYmISM7JCIxKTNAOyQpXDciKiohIzs3JCQiMXItISpSPCZmRiYhIzskIjA7ZVlqaHojKiohIzo3JCQiMUQ0dU9WMSFHJiEjOyQiMS5zLlM9N1kqKiEjOzckJCIxPV9eOCJ5SEcmISM7JCIxViVcWlpyVycqKiEjOzckJCIwaWBEJTRkJUcmISM6JCIwRG9aL3M1KSoqISM6NyQkIjEkSCUpXHQqPiZHJiEjOyQiMiMpUkIrKysrKyIhIzstJSZDT0xPUkc2JiUkUkdCRyQiJ151IykhIickIidedSMpISInJCInXnUjKSEiJy0lKlRISUNLTkVTU0c2IyIiIS0lJlNUWUxFRzYjJSZQQVRDSEctJSlQT0xZR09OU0c2JjdgcTckJCIyMVMnKj1SMVt6JCEjPSQiIiYhIiI3JCQiMUMmUjtAVmt5JCEjPCQiMSVmT282Qyo9XSEjOzckJCIya0guazAmZWxQISM9JCIxV1kjKmVcS05dISM7NyQkIjFHVl0hMz9ycyQhIzwkIjFEUVckKWVpYF0hIzs3JCQiMnVud2krOURuJCEjPSQiMU1YdXEkPj0yJiEjOzckJCIyJz5vXkRMZC1PISM9JCIxJkdqJmY6aSozJiEjOzckJCIxKT1RVDcqM0NOISM8JCIxaWRZTiopeTBeISM7NyQkIjFoITRnKVtJSE0hIzwkIjFlX2lxRTdBXiEjOzckJCIxIyk+WFM7PzxMISM8JCIxcDl1MkdeUV4hIzs3JCQiMUFUJ3lRdDs+JCEjPCQiMSJlbycqKVtGYV4hIzs3JCQiMnNKPyZIRnVbSSEjPSQiMXM7c0MoPilwXiEjOzckJCIyalxCRG1VPCJIISM9JCIxQjZbamoqRz0mISM7NyQkIjIoKip5Yi5CblhGISM9JCIxIlwxJyo0cW8+JiEjOzckJCIyeTI3N0IpKnBjIyEjPSQiL2EjPkNZK0AmISM5NyQkIjEiZj5qaU1VUSMhIzwkIjEtdSIqRyh6PUEmISM7NyQkIjI8aF4mKikqKiopNEEhIz0kIjF5LjFcKyY9QiYhIzs3JCQiMnd3QShSSTEkKj4hIz0kIjFPIj4tXihwVV8hIzs3JCQiMkRVZTNpJSk+IT0hIz0kIjEwcS9mUio0RCYhIzs3JCQiMiU9dDgyTjRzOiEjPSQiMUF2U1BdZGZfISM7NyQkIjJSJykpRyJHbERPIiEjPSQiMSxRTiIpND1tXyEjOzckJCIyeGkhPlkiKTNGNiEjPSQiMVh2YCgzSUJGJiEjOzckJCIxakctXDFBJCkqKSEjPSQiMTolUSd6TTR4XyEjOzckJCIyOjddNW9fKmVsISM+JCIxeUZOVXUhNEcmISM7NyQkIjE4JXomKlJkeUklISM9JCIxTSY0dTdjTEcmISM7NyQkIjJ0KzZKO09FJz0hIz4kIjE3bTJ0ZiZbRyYhIzs3JCQhMSIqMydIZFhPJm8hIz4kIi91QzxLOiZHJiEjOTckJCEyTkNPaEAlSCxIISM+JCIxLT47elxPJUcmISM7NyQkITFRPnlwYz4kRyYhIz0kIjFFJHAxQ0FDRyYhIzs3JCQhMTlsJ3ojcHFAeCEjPSQiMTpHPFlJQnpfISM7NyQkITJZR0VKdGZ2KyIhIz0kIjFKVzFpTCdcRiYhIzs3JCQhMihmV1drYVRKNyEjPSQiMWZWWUhqd3BfISM7NyQkITItI0cnR1xMV1oiISM9JCIxWiopM1NAemlfISM7NyQkITEkcCc0ciY9cG8iISM8JCIxXk9oXDZaYl8hIzs3JCQhMFZZJyp5MW4hPiEjOyQiMGtsQj8mZVlfISM6NyQkITJMYGVvQnEoKTQjISM9JCIxWkwkXCk0aFBfISM7NyQkITJQPDoqZUs+K0IhIz0kIjBLcilbYCRvQSYhIzo3JCQhMSkpUWVZYyIzWyMhIzwkIjEnbyUpeT47ZUAmISM7NyQkITFARSpSK1QnZkUhIzwkIjAoKXlhb0pNPyYhIzo3JCQhMilITWpbQCNSI0chIz0kIjE6RGEkZTowPiYhIzs3JCQhMWQmXEp0QVMpSCEjPCQiMSdwKD13Sz53XiEjOzckJCExRDNpIXkhNEVKISM8JCIxJGZLcyE+b2heISM7NyQkITFHXXkvLVplSyEjPCQiMTNgVU1ePFleISM7NyQkITFCZG5oXUt3TCEjPCQiMSNmdkY3JT5JXiEjOzckJCExLy06RVhUc00hIzwkIjE9KnpUXk9dNiYhIzs3JCQhMSxXMnRdc25OISM8JCIxZSNHYTF4cjQmISM7NyQkITFiWVgwVEFSTyEjPCQiMSY0JUdAaCMzMyYhIzs3JCQhMUBzK1pEJjNxJCEjPCQiMSoqKiozTClwSTEmISM7NyQkITFXeFkzOlxYUCEjPCQiMVQpeixESGUvJiEjOzckJCExTCZRTi4zJXlQISM8JCIxaC5rKilcW0VdISM7NyQkITEkUiVSZz9rI3okISM8JCIxLUQmSCY0ajRdISM7NyQkITI5TSFSVVdvI3okISM9JCIyUE4xTXlqLypcISM8NyQkITE2XmNINCF5eCQhIzwkIjFDNz4hR0lJKFwhIzs3JCQhMmJ0PkpdI0hYUCEjPSQiMXNCP3oqeVMmXCEjOzckJCEyTUEnUSVwQ1BxJCEjPSQiMm0iKWYibygqKXkkXCEjPDckJCExKVwlPnhuSlRPISM8JCIyeC5YJCoqenE+XCEjPDckJCEwQipRN04vbU4hIzskIjImeS00TVxaLVwhIzw3JCQhMWZXLywuVHdNISM8JCIxdyIpNHVyayYpWyEjOzckJCEyRWA8b1dUSlAkISM9JCIyeFo1JipmUyRwWyEjPDckJCExJCkpXGZ6KT1oSyEjPCQiMXkqZXVxblQmWyEjOzckJCEyV1clPi5PZ0VKISM9JCIyWjYqKj42dSRRWyEjPDckJCEyLjVWYi9UZClIISM9JCIyZD9EQUFyUiNbISM8NyQkITIkZndFNUwkWyNHISM9JCIyWilbZ0cyYzRbISM8NyQkITE0a3BCUmJvRSEjPCQiMUZiPm4nR3N6JSEjOzckJCEyPSsjKnBgIXolWyMhIz0kIjJYOWpQQ1VXeSUhIzw3JCQhMiMqPSZlNSo+JylIIyEjPSQiMVQydiVldUl4JSEjOzckJCExY3k2PTZ2LkAhIzwkIjFwYXFRemppWiEjOzckJCExYHBEejZIIio9ISM8JCIxQCpRczlYRnYlISM7NyQkITI9WUkkSHpLKW8iISM9JCIxSy1GVTllV1ohIzs3JCQhMnQ2P2xYS1NaIiEjPSQiMjwxREc6Jj5QWiEjPDckJCEyJFxfZmcsJjNCIiEjPSQiMC1sKik0Pi10JSEjOjckJCEvViVwWVRjKyIhIzokIjIvWFdiKHAqXHMlISM8NyQkITB2c0ZIIz04eCEjPCQiMWAuXFlPdj9aISM7NyQkITJsbnRaQTwkKUgmISM+JCIyOzE3LnckZjxaISM8NyQkITJCbilbaGklKWVJISM+JCIxViE0ZEhHZHIlISM7NyQkITE8di83T2cqZichIz4kIjJYLyMqeVJWW3IlISM8NyQkIjIuKCkpek9GSUI8ISM+JCIxOVA3JlwlNDpaISM7NyQkIjE3UXQ3aylbRSUhIz0kIjFbL0hmcmc7WiEjOzckJCIxNGYqKXlkNSNcJyEjPSQiMTF5ZmdbKz5aISM7NyQkIjFiJ3knSEkrTCEqISM9JCIwYjhzJXoqSHMlISM6NyQkIjJHP21fQiwhSDYhIz0kIjJhZi5jbjl4cyUhIzw3JCQiMidIXiMzdikzWzghIz0kIjJPT0s5Ky5NdCUhIzw3JCQiMU12MzBOL3k6ISM8JCIxPDBqbypHMXUlISM7NyQkIjIoNC5RcyJ5PyE9ISM9JCIvT3RNKTQhXFohIzk3JCQiMiNlJzMqZkA4Kio+ISM9JCIydlpbbWYlZWRaISM8NyQkIjFGMF5iKClcK0EhIzwkIjEoKSllIVFha25aISM7NyQkIjJiT1RCIlxTKVEjISM9JCIyWF1eN3Z0JHlaISM8NyQkIjFOaz80R2siZSMhIzwkIjFcI1tnKipwNHolISM7NyQkIjIoektBODtUUkYhIz0kIjJ1SFVAKnlqLVshIzw3JCQiMiQqUSdwP1QzNEghIz0kIjImcGZpUlsnbyJbISM8NyQkIjI9MiJ5N1NwY0khIz0kIjEjNGsvYSopNCRbISM7NyQkIjEuKipSREUkND4kISM8JCIyMFhpUWVRYyVbISM8NyQkIjFeaGp2OiZHSiQhIzwkIjImcExjKVErNCdbISM8NyQkIjJuYUkpUk0hUlUkISM9JCIxNj9talUteFshIzs3JCQiMmtdIW90JGVrXyQhIz0kIjEjb3BYJnpsJSpbISM7NyQkIjJDNGxvYSFSMU8hIz0kIjIlKTNAOyQpXDciXCEjPDckJCIxLmJYY1h2ck8hIzwkIjA7ZVlqaHojXCEjOjckJCIxXCtMJyllWkVQISM8JCIxLnMuUz03WVwhIzs3JCQiMScqZipSKGZDbFAhIzwkIjJNV1xaWnJXJ1whIzw3JCQiMWxYI1wiKVJreSQhIzwkIjBEb1ovczUpXCEjOjckJCIyMVMnKj1SMVt6JCEjPSQiMSMpUkIrKysrXSEjOy0lJkNPTE9SRzYmJSRSR0JHJCInXnUjKSEiJyQiJ151IykhIickIidedSMpISInLSUqVEhJQ0tORVNTRzYjIiIhLSUmU1RZTEVHNiMlJlBBVENIRy0lKVBPTFlHT05TRzYmN2BxNyQkIjFrKj1SMVt6LiIhIzokIiImISIiNyQkIjJfUjtAVmt5LiIhIzskIjElZk9vNkMqPV0hIzs3JCQiMUxTY11lbFA1ISM6JCIxV1kjKmVcS05dISM7NyQkIjJMLzAzP3JzLiIhIzskIjFEUVckKWVpYF0hIzs3JCQiMm93aSs5RG4uIiEjOyQiMU1YdXEkPj0yJiEjOzckJCIyIm9eRExkLU81ISM7JCIxJkdqJmY6aSozJiEjOzckJCIxI1FUNyozQ041ISM6JCIxaWRZTiopeTBeISM7NyQkIjIwNGcpW0lITTUhIzskIjFlX2lxRTdBXiEjOzckJCIyKD5YUzs/PEw1ISM7JCIxcDl1MkdeUV4hIzs3JCQiMjdreVF0Oz4uIiEjOyQiMSJlbycqKVtGYV4hIzs3JCQiMks/JkhGdVtJNSEjOyQiMXM7c0MoPilwXiEjOzckJCIxTl9pRXU2SDUhIzokIjFCNltqaipHPSYhIzs3JCQiMXpiLkJuWEY1ISM6JCIxIlwxJyo0cW8+JiEjOzckJCIyMjc3QikqcGMtIiEjOyQiL2EjPkNZK0AmISM5NyQkIjJlPmppTVVRLSIhIzskIjEtdSIqRyh6PUEmISM7NyQkIjJoXiYqKSoqKik0QTUhIzskIjF5LjFcKyY9QiYhIzs3JCQiMnlBKFJJMSQqPjUhIzskIjFPIj4tXihwVV8hIzs3JCQiMlZlM2klKT4hPTUhIzskIjEwcS9mUio0RCYhIzs3JCQiMktQcl0kNHM6NSEjOyQiMUF2U1BdZGZfISM7NyQkIjInKSlHIkdsRE8sIiEjOyQiMSxRTiIpND1tXyEjOzckJCIyaSE+WSIpM0Y2NSEjOyQiMVh2YCgzSUJGJiEjOzckJCIyRy1cMUEkKSozNSEjOyQiMTolUSd6TTR4XyEjOzckJCIyLDAib18qZWwrIiEjOyQiMXlGTlV1ITRHJiEjOzckJCIyJXomKlJkeUkvNSEjOyQiMU0mNHU3Y0xHJiEjOzckJCIxNko7T0UnPSsiISM6JCIxN20ydGYmW0cmISM7NyQkIjFScVVhajkkKioqISM7JCIvdUM8SzomRyYhIzk3JCQiMVAnUXkwKCk0KCoqISM7JCIxLT47elxPJUcmISM7NyQkIjA9LUwvb3IlKiohIzokIjFFJHAxQ0FDRyYhIzs3JCQiMU4uc0lIeUEqKiEjOyQiMTpHPFlJQnpfISM7NyQkIjFzdG9FU0MqKikqISM7JCIxSlcxaUwnXEYmISM7NyQkIjFhYmJgJWVvKCkqISM7JCIxZlZZSGp3cF8hIzs3JCQiMTxQcl1tYl8pKiEjOyQiMVoqKTNTQHppXyEjOzckJCIwTCEqRzkzOCQpKiEjOiQiMV5PaFw2WmJfISM7NyQkIjFkYC5AJEgkNCkqISM7JCIwa2xCPyZlWV8hIzo3JCQiMVlUSndINyF6KiEjOyQiMVpMJFwpNGhQXyEjOzckJCIxJFszVG4hKSpwKCohIzskIjBLcilbYCRvQSYhIzo3JCQiMTY7TU4lPT52KiEjOyQiMSdvJSl5PjtlQCYhIzs3JCQiMVEyZyoqZS5NKCohIzskIjAoKXlhb0pNPyYhIzo3JCQiMWRtOCZ5MndyKiEjOyQiMTpEYSRlOjA+JiEjOzckJCIxV11vRXhmLCgqISM7JCIxJ3AoPXdLPndeISM7NyQkIjE8eiQ+IzRSKG8qISM7JCIxJGZLcyE+b2heISM7NyQkIjEpXEAmekg6dScqISM7JCIxM2BVTV48WV4hIzs3JCQiMUdDJFFcbkJtKiEjOyQiMSNmdkY3JT5JXiEjOzckJCIwKVxRWiZlRmwqISM6JCIxPSp6VF5PXTYmISM7NyQkIjBjI3AjXEZLayohIzokIjFlI0dhMXhyNCYhIzs3JCQiMU5YWCpleGdqKiEjOyQiMSY0JUdAaCMzMyYhIzs3JCQiMXkjKkhYWiIqSCcqISM7JCIxKioqKjNMKXBJMSYhIzs3JCQiMURLOlwzWEQnKiEjOyQiMVQpeixESGUvJiEjOzckJCIxWmhrJz5mQGkqISM7JCIxaC5rKilcW0VdISM7NyQkIjFoMCdSek4yaSohIzskIjEtRCZIJjRqNF0hIzs3JCQiMW00d2I6dD8nKiEjOyQiMlBOMU15ai8qXCEjPDckJCIxKltWcSEqPkFpKiEjOyQiMUM3PiFHSUkoXCEjOzckJCIxRiEpb1wyWkQnKiEjOyQiMXNCP3oqeVMmXCEjOzckJCIxeThjSXZpSCcqISM7JCIybSIpZiJvKCopeSRcISM8NyQkIjBiIUdBJG9laiohIzokIjJ4LlgkKip6cT5cISM8NyQkIjF4NXdbY1JWJyohIzskIjImeS00TVxaLVwhIzw3JCQiMWFiKilwKmVCbCohIzskIjF3Iik0dXJrJilbISM7NyQkIjFaIz1gJmVvaScqISM7JCIyeFo1JipmUyRwWyEjPDckJCIxNl1TPzYpUW4qISM7JCIxeSpldXFuVCZbISM7NyQkIjFjMG9SJ1J0byohIzskIjJaNioqPjZ1JFFbISM8NyQkIjBwWGEqZVUsKCohIzokIjJkP0RBQXJSI1shIzw3JCQiMU1LKCpvbV48KCohIzskIjJaKVtnRzJjNFshIzw3JCQiME9Jd2dXSnQqISM6JCIxRmI+bidHc3olISM7NyQkIi8zSVk0X14oKiEjOSQiMlg5alBDVVd5JSEjPDckJCIxIltUKjMhUSx4KiEjOyQiMVQydiVldUl4JSEjOzckJCIxOSMpPSkpW2kqeSohIzskIjFwYXFRemppWiEjOzckJCIxMFYyIykzKDMiKSohIzskIjFAKlFzOVhGdiUhIzs3JCQiMWFwMTJzO0opKiEjOyQiMUstRlU5ZVdaISM7NyQkIjEqKXpNYW5mXykqISM7JCIyPDFERzomPlBaISM8NyQkIjF2LyVSKVwicCgpKiEjOyQiMC1sKik0Pi10JSEjOjckJCIwZDBMJmVWKiopKiEjOiQiMi9YV2IocCpccyUhIzw3JCQiMXRBMngib0cjKiohIzskIjFgLlxZT3Y/WiEjOzckJCIxakF2Rm8sWioqISM7JCIyOzE3LnckZjxaISM8NyQkIjE4XlFQOlRwKiohIzskIjFWITRkSEdkciUhIzs3JCQiMWB6USdSK00qKiohIzskIjJYLyMqeVJWW3IlISM8NyQkIjIqKXpPRklCPCsiISM7JCIxOVA3JlwlNDpaISM7NyQkIjJQdDdrKVtFLzUhIzskIjFbL0hmcmc7WiEjOzckJCIyZSopeWQ1I1wxNSEjOyQiMTF5ZmdbKz5aISM7NyQkIjIneSdISStMITQ1ISM7JCIwYjhzJXoqSHMlISM6NyQkIjFpRU43K0g2NSEjOiQiMmFmLmNuOXhzJSEjPDckJCIyOEQzdikzWzg1ISM7JCIyT09LOSsuTXQlISM8NyQkIjJfKDMwTi95OjUhIzskIjE8MGpvKkcxdSUhIzs3JCQiMkshUXMieT8hPTUhIzskIi9PdE0pNCFcWiEjOTckJCIybTMqZkA4Kio+NSEjOyQiMnZaW21mJWVkWiEjPDckJCIyXzVidilcK0E1ISM7JCIxKCkpZSFRYWtuWiEjOzckJCIyT1RCIlxTKVEtIiEjOyQiMlhdXjd2dCR5WiEjPDckJCIyVjEjNEdrImUtIiEjOyQiMVwjW2cqKnA0eiUhIzs3JCQiMkhCS2g2JVJGNSEjOyQiMnVIVUAqeWotWyEjPDckJCIxa3A/VDM0SDUhIzokIjImcGZpUlsnbyJbISM8NyQkIjIzInk3U3BjSTUhIzskIjEjNGsvYSopNCRbISM7NyQkIjIiKipSREUkND4uIiEjOyQiMjBYaVFlUWMlWyEjPDckJCIyOU9jZF5HSi4iISM7JCIyJnBMYylRKzQnWyEjPDckJCIyYUkpUk0hUlUuIiEjOyQiMTY/bWpVLXhbISM7NyQkIjEwb3QkZWtfLiIhIzokIjEjb3BYJnpsJSpbISM7NyQkIjFeJ29hIVIxTzUhIzokIjIlKTNAOyQpXDciXCEjPDckJCIxYlhjWHZyTzUhIzokIjA7ZVlqaHojXCEjOjckJCIyL0lqKWVaRVA1ISM7JCIxLnMuUz03WVwhIzs3JCQiMCcqUihmQ2xQNSEjOSQiMk1XXFpaclcnXCEjPDckJCIyZENcIilSa3kuIiEjOyQiMERvWi9zNSlcISM6NyQkIjFrKj1SMVt6LiIhIzokIjEjKVJCKysrK10hIzstJSZDT0xPUkc2JiUkUkdCRyQiJ151IykhIickIidedSMpISInJCInXnUjKSEiJy0lKlRISUNLTkVTU0c2IyIiIS0lJlNUWUxFRzYjJSZQQVRDSEctJSlQT0xZR09OU0c2JjdgcTckJCIwMSdwZUQvbXYhIzskIiIhISIiNyQkIjFAIypSViJvJFx2ISM8JCIyQ1VmT282Qyo9ISM+NyQkIjAkM28nUSJ5MnYhIzskIjJuU2tDKmVcS04hIz43JCQiMDpueE0hNEp1ISM7JCIwYSNRVyQpZWlgISM8NyQkIjFGN1ludEBBdCEjPCQiMWRMWHVxJD49KCEjPTckJCIxLC80Py94Iz0oISM8JCIxYyZHaiZmOmkqKSEjPTckJCIxb2Ajb1wqR0VxISM8JCIxPHdsYSQqKXkwIiEjPDckJCIxJWY+RHU0dCRvISM8JCIxekREMW5BQDchIzw3JCQiMU8kR1thKno4bSEjPCQiMkFwOXUyR15RIiEjPTckJCIxRyE0Iz1GX2pqISM8JCIwImVvJyopW0ZhIiEjOzckJCIxbC1icCJcJnlnISM8JCIyJjRuQFpzPilwIiEjPTckJCIwJWVobioqUjBlISM7JCIxTjciW2pqKkc9ISM8NyQkIjFYamJVMkh1YSEjPCQiMTRcMScqNHFvPiEjPDckJCIybUpuWVBfIT1eISM9JCIyVSthIz5DWStAISM9NyQkIjE8c11VLm1gWiEjPCQiMC11IipHKHo9QSEjOzckJCIxUCplRipRMjFXISM8JCIyYXguMVwrJj1CISM9NyQkIjJ1XitrIW91dFIhIz0kIjJlTyI+LV4ocFUjISM9NyQkIjIvIz41Inp3RmYkISM9JCIyLTBxL2ZSKjREISM9NyQkIjJPMD4oZUNVTUohIz0kIjFAXzJ1LnYmZiMhIzw3JCQiMkw1QVhVbm1yIyEjPSQiMmErUU4iKTQ9bSMhIz03JCQiMi5hb151dnJDIyEjPSQiMi1XdmAoM0lCRiEjPTckJCIyRFJzKSpbazV6IiEjPSQiMV9UUSd6TTR4IyEjPDckJCIydGs+Rmw7eEkiISM9JCIyTHlGTlV1ITRHISM9NyQkIjFAdic+I3omKillKSEjPSQiMjFNJjR1N2NMRyEjPTckJCIxcCRvejouUHIkISM9JCIydzZtMnRmJltHISM9NyQkITI8IWUvIz5za08iISM+JCIxKSpSWnNAYF5HISM8NyQkITF4Ny1zemMleSYhIz0kIjJZLD47elxPJUchIz03JCQhMmllJDRZd05gNSEjPSQiMnVEJHAxQ0FDRyEjPTckJCExV1xfJUhYJlI6ISM8JCIyJ2UiRzxZSUJ6IyEjPTckJCExYlBeSjgnKTM/ISM8JCIwSlcxaUwnXEYhIzs3JCQhMSNcT2ZRIz1iQyEjPCQiMjFmVllIandwIyEjPTckJCEyQ1kmMzkhNChSSCEjPSQiMmJZKikzU0B6aSMhIz03JCQhMTo3XihRZkxPJCEjPCQiMktdT2hcNlpiIyEjPTckJCEyMWBdL29xOiFRISM9JCIxLWtsQj8mZVkjISM8NyQkITJEUmNVai9YPSUhIz0kIjF3TUxcKTRoUCMhIzw3JCQhMkNTW1BnKjQnZSUhIz0kIjI6PzgoKVtgJG9BISM9NyQkITEpR1k0XUFpJVwhIzwkIjIjZW8lKXk+O2VAISM9NyQkITIxUy0kKlxpRkkmISM9JCIyOnEpeWFvSk0/ISM9NyQkITFIViUpM1dJSWMhIzwkIjFkXlVOZTowPiEjPDckJCExOXlNazZeXGYhIzwkIjFocCg9d0s+dyIhIzw3JCQhMSd6IzRcW3dLaSEjPCQiMi0kZktzIT5vaCIhIz03JCQhMWtkK2w5cSdcJyEjPCQiMnIyYFVNXjxZIiEjPTckJCExIm9yNTt6O3QnISM8JCIxPWZ2RjclPkkiISM8NyQkITFeRDJoN0VCcCEjPCQiMjE9KnpUXk9dNiEjPTckJCExbClwUk8hSDhyISM8JCIxYGQjR2ExeHIqISM9NyQkITBFemBMV2VEKCEjOyQiMTMmNCVHQGgjMykhIz03JCQhLyVbSlY9KHl0ISM6JCIxJykpKioqM0wpcEknISM9NyQkITBKXWE0PnhZKCEjOyQiMSk0JSl6LERIZSUhIz03JCQhMWtQOCZwWkxgKCEjPCQiMiVIZy5rKilcW0UhIz43JCQhMTtWdVF0c2h2ISM8JCIxbD5dX0gmNGoqISM+NyQkITAsJVxSPSI9YyghIzskITF3a2skZjtpYCohIz43JCQhMS0qPSFlczhLdiEjPCQhMW52KDMpPihwcCMhIz03JCQhMTJCIjNLQXRZKCEjPCQhMTNHd3o/NSNmJSEjPTckJCExLENbKSlbVyVRKCEjPCQhMU4kPVM9QjVAJyEjPTckJCEwTikqM287K0UoISM7JCExRGlcbCs/SCEpISM9NyQkITE5YTIob1AqNHIhIzwkITA8czRmMUR2KiEjPDckJCExWVdRIyp6QUpwISM8JCExVCM9IWYjR045IiEjPDckJCExVSlmYHFKYHMnISM8JCEyM0EmKlsrJWYxOCEjPTckJCExUW5uaDw3LWwhIzwkITJLQTVhI0hLZTkhIz03JCQhMld5MSE0dHlMaSEjPSQhMmAmKTMrKSllaWgiISM9NyQkITBhKFE7ciRIJmYhIzskITIyJXp1eHhHZzwhIz03JCQhMSMpUnNzNTdLYyEjPCQhMjA6XlJyI1IvPiEjPTckJCEyOlppKnlIYD9gISM9JCExR1ovR0xyRj8hIzw3JCQhMkQ/LklmWlQmXCEjPSQhMlpib0JjeGI6IyEjPTckJCEyJz16VnpFJ0hlJSEjPSQhMSplI1xfVERwQSEjPDckJCExJGZEJ2ZhViU+JSEjPCQhMTRgJUhoP09QIyEjPDckJCEyQ2grKTNfJDN4JCEjPSQhMSR6NXdfW0RaIyEjPDckJCExXzc/XSRwaE8kISM8JCEyJ3p3SHhiPWFEISM9NyQkITE9KjNCVjQqUUghIzwkITI9UVw8WlshR0UhIz03JCQhMksnPlcqR2JTWCMhIz0kITIwISlcLiw0eXAjISM9NyQkITJMNFlRck9dKyMhIz0kITIkKVxiWENJK3YjISM9NyQkITIlWy9IaWMleWAiISM9JCEyKXBrNE5OWSN6IyEjPTckJCEycjdBW2NzajAiISM9JCEyQVF6b1JpUyNHISM9NyQkITJFYEsneU1wKTQnISM+JCEyMGQ0SC88RiVHISM9NyQkITFwWSopKmVAZUoiISM9JCEyT2J6NS1tOiZHISM9NyQkIjJhdDwudCxmViQhIz4kITJLJ0d3W10wXEchIz03JCQiMDQwKVtHRy4mKSEjPCQhMi5fJjQyJUdSJEchIz03JCQiMj46LUB6KVElSCIhIz0kITIwJT4tJVJeKjRHISM9NyQkIjJ0WHJfLyEqNCE9ISM9JCEyeFxreV8/K3gjISM9NyQkIjJFS3oyLyEqNEQjISM9JCEyeC9rUkNgR3MjISM9NyQkIjJNTEgqelUheW8jISM9JCExampuJikqcGZtIyEjPDckJCIxXz42KVwmR1lKISM8JCEyJ0dbcDguciRmIyEjPTckJCIxay4zOEwnSGYkISM8JCExKipSbV87ISo0RCEjPDckJCIxS15QXXQlZSlSISM8JCExRF9eTFM6Q0MhIzw3JCQiMWVDVjwpSHRRJSEjPCQhMkU4NiU+Y2FCQiEjPTckJCIxW1Q6N10oPnclISM8JCExYVxbKFtpaUAjISM8NyQkIjEjKnlhcTBEWl4hIzwkITIjNHZeUitJITQjISM9NyQkIjFENDtbIzM9WSYhIzwkITInR3FkeTVpdD4hIz03JCQiMUNKaydSKjQrZSEjPCQhMTEudS47Tko9ISM8NyQkIjJDPkAjXEJTJTQnISM9JCEyQzNmYGYvLHAiISM9NyQkIjEtJipHJXpYP08nISM8JCEyblx2ODs5T2EiISM9NyQkIjFAPEJNazcwbSEjPCQhMmFJbVY2Jyo0UiIhIz03JCQiMXRqXipSU2wjbyEjPCQhMSopKXpMT2QoSDchIzw3JCQiMUNcMiFHODUuKCEjPCQhMm08LlZYP00wIiEjPTckJCIxQyZRTDoiUSE+KCEjPCQhMVs2Knkkbyx2KSkhIz03JCQiMUUkKSpbPS4ySyghIzwkITEnKlI9TWwkUT8oISM9NyQkIjEkW0MxJ2YhKUh1ISM8JCExdid6aSpmInlRJiEjPTckJCIxYSFvekswcl0oISM8JCEyPWtiXV9fR2IkISM+NyQkIjE2cDFyOE9cdiEjPCQhMiUzXTxCYnojKj0hIz43JCQiMDEncGVEL212ISM7JCIyX3B4I1F4IilSQiEjRi0lJkNPTE9SRzYmJSRSR0JHJCInXnUjKSEiJyQiJ151IykhIickIidedSMpISInLSUqVEhJQ0tORVNTRzYjIiIhLSUmU1RZTEVHNiMlJlBBVENIRy0lKVBPTFlHT05TRzYmN2BxNyQkIjIxJ3BlRC9tdjUhIzskIiIhISIiNyQkIjJBKlJWIm8kXHY1ISM7JCIyQ1VmT282Qyo9ISM+NyQkIjIjM28nUSJ5MnY1ISM7JCIyblNrQyplXEtOISM+NyQkIjI5bnhNITRKdTUhIzskIjBhI1FXJCllaWAhIzw3JCQiMkNodU88QUsyIiEjOyQiMWRMWHVxJD49KCEjPTckJCIyVCE0Py94Iz0yIiEjOyQiMWMmR2omZjppKikhIz03JCQiMlFEb1wqR0VxNSEjOyQiMTx3bGEkKil5MCIhIzw3JCQiMSc+RHU0dCRvNSEjOiQiMXpERDFuQUA3ISM8NyQkIjJLR1thKno4bTUhIzskIjJBcDl1MkdeUSIhIz03JCQiMi80Iz1GX2pqNSEjOyQiMCJlbycqKVtGYSIhIzs3JCQiMkVdJnAiXCZ5ZzUhIzskIjImNG5AWnM+KXAiISM9NyQkIjIlZWhuKipSMGU1ISM7JCIxTjciW2pqKkc9ISM8NyQkIjJNY0R1IUh1YTUhIzskIjE0XDEnKjRxbz4hIzw3JCQiMkpuWVBfIT1eNSEjOyQiMlUrYSM+Q1krQCEjPTckJCIyQTJETWdPdi8iISM7JCIwLXUiKkcoej1BISM7NyQkIjIkKmVGKlEyMVc1ISM7JCIyYXguMVwrJj1CISM9NyQkIjJfK2shb3V0UjUhIzskIjJlTyI+LV4ocFUjISM9NyQkIjIkPjUiendGZi4iISM7JCIyLTBxL2ZSKjREISM9NyQkIjIvPihlQ1VNSjUhIzskIjFAXzJ1LnYmZiMhIzw3JCQiMUBfQ3VtO0Y1ISM6JCIyYStRTiIpND1tIyEjPTckJCIyYm9edXZyQy0iISM7JCIyLVd2YCgzSUJGISM9NyQkIjJRcykqW2s1eiwiISM7JCIxX1RRJ3pNNHgjISM8NyQkIjJsPkZsO3hJLCIhIzskIjJMeUZOVXUhNEchIz03JCQiMncnPiN6JiopZTM1ISM7JCIyMU0mNHU3Y0xHISM9NyQkIjIlb3o6LlByLjUhIzskIjJ3Nm0ydGYmW0chIz03JCQiMVUmeiF5X0wnKSoqISM7JCIxKSpSWnNAYF5HISM8NyQkIjEoeXotS2FAJSoqISM7JCIyWSw+O3pcTyVHISM9NyQkIjFUMVJOVW0lKikqISM7JCIydUQkcDFDQUNHISM9NyQkIjEwdmFxYS9ZKSohIzskIjInZSJHPFlJQnojISM9NyQkIjFDJ1tvJ1E2KnoqISM7JCIwSlcxaUwnXEYhIzs3JCQiMV5qU2g8W2EoKiEjOyQiMjFmVllIandwIyEjPTckJCIxYDlmKTRIZ3EqISM7JCIyYlkqKTNTQHppIyEjPTckJCIxeilbNzFrT20qISM7JCIyS11PaFw2WmIjISM9NyQkIjFaXCY+JEglKT4nKiEjOyQiMS1rbEI/JmVZIyEjPDckJCIxaFZkTyZcOmUqISM7JCIxd01MXCk0aFAjISM8NyQkIjFmXmlSK1JUJiohIzskIjI6PzgoKVtgJG9BISM9NyQkIjFzYCEqXHhQMCYqISM7JCIyI2VvJSl5PjtlQCEjPTckJCIwd3ArdkIocCUqISM6JCIyOnEpeWFvSk0/ISM9NyQkIjFuYjZmJnBwViohIzskIjFkXlVOZTowPiEjPDckJCIxPl9jJCkpW11TKiEjOyQiMWhwKD13Sz53IiEjPDckJCIwcyE0Ok5zdyQqISM6JCIyLSRmS3MhPm9oIiEjPTckJCIxQyUqXGApSC5OKiEjOyQiMnIyYFVNXjxZIiEjPTckJCIxS0cqUTNLb0sqISM7JCIxPWZ2RjclPkkiISM8NyQkIjFXRipRKFFuMiQqISM7JCIyMT0qelReT102ISM9NyQkIjE5SWdqNG4pRyohIzskIjFgZCNHYTF4ciohIz03JCQiMXU/WW1iVHUjKiEjOyQiMTMmNCVHQGgjMykhIz03JCQiMDsmb2MiR0BFKiEjOiQiMScpKSoqKjNMKXBJJyEjPTckJCIxcFxYITRHS0QqISM7JCIxKTQlKXosREhlJSEjPTckJCIxQ21bSV9tWSMqISM7JCIyJUhnLmsqKVxbRSEjPjckJCIxb2I3bXMjUUMqISM7JCIxbD5dX0gmNGoqISM+NyQkIjEqZl1nIik9UUMqISM7JCExd2trJGY7aWAqISM+NyQkIjA2KT51aXlZIyohIzokITFudigzKT4ocHAjISM9NyQkIjFwKD16d25LRCohIzskITEzR3d6PzUjZiUhIz03JCQiMHdeNl5iOkUqISM6JCExTiQ9Uz1CNUAnISM9NyQkIjFsLCI+TCkqUkYqISM7JCExRGlcbCs/SCEpISM9NyQkIjFlQ0hKaSsqRyohIzskITA8czRmMUR2KiEjPDckJCIxYjp3K3Mob0kqISM7JCExVCM9IWYjR045IiEjPDckJCIxO1NZSG9ZRiQqISM7JCEyM0EmKlsrJWYxOCEjPTckJCIxRUIkUSN5eVwkKiEjOyQhMktBNWEjSEtlOSEjPTckJCIxQCQqNHA3aXckKiEjOyQhMmAmKTMrKSllaWgiISM9NyQkIjFZN08pRzFaUyohIzskITIyJXp1eHhHZzwhIz03JCQiMS13cyMqeXlPJSohIzskITIwOl5SciNSLz4hIz03JCQiMWBQNS1uJXpZKiEjOyQhMUdaL0dMckY/ISM8NyQkIjBvKnBTX2UvJiohIzokITJaYm9CY3hiOiMhIz03JCQiMTNpMEtQcVQmKiEjOyQhMSplI1xfVERwQSEjPDckJCIxVHUuYWtiIWUqISM7JCExNGAlSGg/T1AjISM8NyQkIjFRKj4iemsiSGkqISM7JCExJHo1d19bRFojISM8NyQkIjF2KXpcMSRRaicqISM7JCEyJ3p3SHhiPWFEISM9NyQkIjEzInBuMDRocSohIzskITI9UVw8WlshR0UhIz03JCQiMS9lMHJXZmEoKiEjOyQhMjAhKVwuLDR5cCMhIz03JCQiMFI6J0dqXCp6KiEjOiQhMiQpXGJYQ0krdiMhIz03JCQiMWI0eExhQFkpKiEjOyQhMilwazROTlkjeiMhIz03JCQiMSh5PE51aVYqKSohIzskITJBUXpvUmlTI0chIz03JCQiMXVPQGxJLFIqKiEjOyQhMjBkNEgvPEYlRyEjPTckJCIxYTU1JXlUbykqKiEjOyQhMk9iejUtbTomRyEjPTckJCIyeUpJPCFmVi41ISM7JCEySydHd1tdMFxHISM9NyQkIjJfISlbR0cuJjM1ISM7JCEyLl8mNDIlR1IkRyEjPTckJCIyOi1AeilRJUgsIiEjOyQhMjAlPi0lUl4qNEchIz03JCQiMllyXy8hKjQhPTUhIzskITJ4XGt5Xz8reCMhIz03JCQiMkx6Mi8hKjRELSIhIzskITJ4L2tSQ2BHcyMhIz03JCQiMk1IKnpVIXlvLSIhIzskITFqam4mKSpwZm0jISM8NyQkIjInPjYpXCZHWUo1ISM7JCEyJ0dbcDguciRmIyEjPTckJCIyUCEzOEwnSGYuIiEjOyQhMSoqUm1fOyEqNEQhIzw3JCQiMjh2Lk5aZSlSNSEjOyQhMURfXkxTOkNDISM8NyQkIjJZS3UiKUh0US8iISM7JCEyRTg2JT5jYUJCISM9NyQkIjI5YUAsdj53LyIhIzskITFhXFsoW2lpQCMhIzw3JCQiMXphcTBEWl41ISM6JCEyIzR2XlIrSSE0IyEjPTckJCIyIzQ7WyMzPVkwIiEjOyQhMidHcWR5NWl0PiEjPTckJCIyN1ZtUio0K2U1ISM7JCExMS51LjtOSj0hIzw3JCQiMj1AI1xCUyU0MSIhIzskITJDM2ZgZi8scCIhIz03JCQiMSYqRyV6WD9PMSIhIzokITJuXHY4OzlPYSIhIz03JCQiMnNKVVZFXmcxIiEjOyQhMmFJbVY2Jyo0UiIhIz03JCQiMlE7JipSU2wjbzUhIzskITEqKSl6TE9kKEg3ISM8NyQkIjIjXDIhRzg1LjIiISM7JCEybTwuVlg/TTAiISM9NyQkIjJfUUw6IlEhPjIiISM7JCExWzYqeSRvLHYpKSEjPTckJCIyTCkqWz0uMksyIiEjOyQhMScqUj1NbCRRPyghIz03JCQiMltDMSdmISlIdTUhIzskITF2J3ppKmYieVEmISM9NyQkIjIxb3pLMHJdMiIhIzskITI9a2JdX19HYiQhIz43JCQiMiNwMXI4T1x2NSEjOyQhMiUzXTxCYnojKj0hIz43JCQiMjEncGVEL212NSEjOyQiMl9weCNReCIpUkIhI0YtJSZDT0xPUkc2JiUkUkdCRyQiJ151IykhIickIidedSMpISInJCInXnUjKSEiJy0lKlRISUNLTkVTU0c2IyIiIS0lJlNUWUxFRzYjJSZQQVRDSEctJSVURVhURzYmNyQkIiImISIiJCIjNSEiIi0lKV9UWVBFU0VURzYjLUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkc2IjY1LUkjbXNHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHNiI2I1EiSjYiLyUnZmFtaWx5R1EqSGVsdmV0aWNhNiIvJSVzaXplR1EjMTI2Ii8lJWJvbGRHUSZmYWxzZTYiLyUnaXRhbGljR1EmZmFsc2U2Ii8lKnVuZGVybGluZUdRJmZhbHNlNiIvJSpzdWJzY3JpcHRHUSZmYWxzZTYiLyUsc3VwZXJzY3JpcHRHUSZmYWxzZTYiLyUrZm9yZWdyb3VuZEdRKFswLDAsMF02Ii8lK2JhY2tncm91bmRHUS5bMjU1LDI1NSwyNTVdNiIvJSdvcGFxdWVHUSZmYWxzZTYiLyUrZXhlY3V0YWJsZUdRJmZhbHNlNiIvJSlyZWFkb25seUdRJmZhbHNlNiIvJSljb21wb3NlZEdRJmZhbHNlNiIvJSpjb252ZXJ0ZWRHUSZmYWxzZTYiLyUraW1zZWxlY3RlZEdRJmZhbHNlNiIvJSxwbGFjZWhvbGRlckdRJmZhbHNlNiIvJTZzZWxlY3Rpb24tcGxhY2Vob2xkZXJHUSZmYWxzZTYiLyUsbWF0aHZhcmlhbnRHUSdub3JtYWw2Ii0lJkNPTE9SRzYmJSRSR0JHJCIiISEiIiQiIiEhIiIkIiIhISIiLSUlRk9OVEc2JSUqSEVMVkVUSUNBRyUoREVGQVVMVEciIzctJSVURVhURzYmNyQkIiIhISIiJCIiJiEiIi0lKV9UWVBFU0VURzYjLUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkc2IjY1LUkjbXNHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHNiI2I1EjUjA2Ii8lJ2ZhbWlseUdRKkhlbHZldGljYTYiLyUlc2l6ZUdRIzEyNiIvJSVib2xkR1EmZmFsc2U2Ii8lJ2l0YWxpY0dRJmZhbHNlNiIvJSp1bmRlcmxpbmVHUSZmYWxzZTYiLyUqc3Vic2NyaXB0R1EmZmFsc2U2Ii8lLHN1cGVyc2NyaXB0R1EmZmFsc2U2Ii8lK2ZvcmVncm91bmRHUShbMCwwLDBdNiIvJStiYWNrZ3JvdW5kR1EuWzI1NSwyNTUsMjU1XTYiLyUnb3BhcXVlR1EmZmFsc2U2Ii8lK2V4ZWN1dGFibGVHUSZmYWxzZTYiLyUpcmVhZG9ubHlHUSZmYWxzZTYiLyUpY29tcG9zZWRHUSZmYWxzZTYiLyUqY29udmVydGVkR1EmZmFsc2U2Ii8lK2ltc2VsZWN0ZWRHUSZmYWxzZTYiLyUscGxhY2Vob2xkZXJHUSZmYWxzZTYiLyU2c2VsZWN0aW9uLXBsYWNlaG9sZGVyR1EmZmFsc2U2Ii8lLG1hdGh2YXJpYW50R1Enbm9ybWFsNiItJSZDT0xPUkc2JiUkUkdCRyQiIiEhIiIkIiIhISIiJCIiISEiIi0lJUZPTlRHNiUlKkhFTFZFVElDQUclKERFRkFVTFRHIiM3LSUlVEVYVEc2JjckJCIjNSEiIiQiIiYhIiItJSlfVFlQRVNFVEc2Iy1JJW1yb3dHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHNiI2NS1JI21zRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliRzYiNiNRI1IxNiIvJSdmYW1pbHlHUSpIZWx2ZXRpY2E2Ii8lJXNpemVHUSMxMjYiLyUlYm9sZEdRJmZhbHNlNiIvJSdpdGFsaWNHUSZmYWxzZTYiLyUqdW5kZXJsaW5lR1EmZmFsc2U2Ii8lKnN1YnNjcmlwdEdRJmZhbHNlNiIvJSxzdXBlcnNjcmlwdEdRJmZhbHNlNiIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXTYiLyUrYmFja2dyb3VuZEdRLlsyNTUsMjU1LDI1NV02Ii8lJ29wYXF1ZUdRJmZhbHNlNiIvJStleGVjdXRhYmxlR1EmZmFsc2U2Ii8lKXJlYWRvbmx5R1EmZmFsc2U2Ii8lKWNvbXBvc2VkR1EmZmFsc2U2Ii8lKmNvbnZlcnRlZEdRJmZhbHNlNiIvJStpbXNlbGVjdGVkR1EmZmFsc2U2Ii8lLHBsYWNlaG9sZGVyR1EmZmFsc2U2Ii8lNnNlbGVjdGlvbi1wbGFjZWhvbGRlckdRJmZhbHNlNiIvJSxtYXRodmFyaWFudEdRJ25vcm1hbDYiLSUmQ09MT1JHNiYlJFJHQkckIiIhISIiJCIiISEiIiQiIiEhIiItJSVGT05URzYlJSpIRUxWRVRJQ0FHJShERUZBVUxURyIjNy0lJVRFWFRHNiY3JCQiIiEhIiIkIiIhISIiLSUpX1RZUEVTRVRHNiMtSSVtcm93RzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliRzYiNjUtSSNtc0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkc2IjYjUSVTX3IwNiIvJSdmYW1pbHlHUSpIZWx2ZXRpY2E2Ii8lJXNpemVHUSMxMjYiLyUlYm9sZEdRJmZhbHNlNiIvJSdpdGFsaWNHUSZmYWxzZTYiLyUqdW5kZXJsaW5lR1EmZmFsc2U2Ii8lKnN1YnNjcmlwdEdRJmZhbHNlNiIvJSxzdXBlcnNjcmlwdEdRJmZhbHNlNiIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXTYiLyUrYmFja2dyb3VuZEdRLlsyNTUsMjU1LDI1NV02Ii8lJ29wYXF1ZUdRJmZhbHNlNiIvJStleGVjdXRhYmxlR1EmZmFsc2U2Ii8lKXJlYWRvbmx5R1EmZmFsc2U2Ii8lKWNvbXBvc2VkR1EmZmFsc2U2Ii8lKmNvbnZlcnRlZEdRJmZhbHNlNiIvJStpbXNlbGVjdGVkR1EmZmFsc2U2Ii8lLHBsYWNlaG9sZGVyR1EmZmFsc2U2Ii8lNnNlbGVjdGlvbi1wbGFjZWhvbGRlckdRJmZhbHNlNiIvJSxtYXRodmFyaWFudEdRJ25vcm1hbDYiLSUmQ09MT1JHNiYlJFJHQkckIiIhISIiJCIiISEiIiQiIiEhIiItJSVGT05URzYlJSpIRUxWRVRJQ0FHJShERUZBVUxURyIjNy0lJVRFWFRHNiY3JCQiIzUhIiIkIiIhISIiLSUpX1RZUEVTRVRHNiMtSSVtcm93RzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliRzYiNjUtSSNtc0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkc2IjYjUSVTX3IxNiIvJSdmYW1pbHlHUSpIZWx2ZXRpY2E2Ii8lJXNpemVHUSMxMjYiLyUlYm9sZEdRJmZhbHNlNiIvJSdpdGFsaWNHUSZmYWxzZTYiLyUqdW5kZXJsaW5lR1EmZmFsc2U2Ii8lKnN1YnNjcmlwdEdRJmZhbHNlNiIvJSxzdXBlcnNjcmlwdEdRJmZhbHNlNiIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXTYiLyUrYmFja2dyb3VuZEdRLlsyNTUsMjU1LDI1NV02Ii8lJ29wYXF1ZUdRJmZhbHNlNiIvJStleGVjdXRhYmxlR1EmZmFsc2U2Ii8lKXJlYWRvbmx5R1EmZmFsc2U2Ii8lKWNvbXBvc2VkR1EmZmFsc2U2Ii8lKmNvbnZlcnRlZEdRJmZhbHNlNiIvJStpbXNlbGVjdGVkR1EmZmFsc2U2Ii8lLHBsYWNlaG9sZGVyR1EmZmFsc2U2Ii8lNnNlbGVjdGlvbi1wbGFjZWhvbGRlckdRJmZhbHNlNiIvJSxtYXRodmFyaWFudEdRJ25vcm1hbDYiLSUmQ09MT1JHNiYlJFJHQkckIiIhISIiJCIiISEiIiQiIiEhIiItJSVGT05URzYlJSpIRUxWRVRJQ0FHJShERUZBVUxURyIjNy0lKVBPTFlHT05TRzYnNyQ3JCQiIiEhIiIkIiImISIiNyQkIiImISIiJCIjNSEiIi0lJkNPTE9SRzYmJSRSR0JHJCIiISEiIiQiIiEhIiIkIiIhISIiLSUqTElORVNUWUxFRzYjIiIiLSUqVEhJQ0tORVNTRzYjIiIhLSUmU1RZTEVHNiMlJUxJTkVHLSUpUE9MWUdPTlNHNic3JDckJCIjNSEiIiQiIiYhIiI3JCQiIiYhIiIkIiM1ISIiLSUmQ09MT1JHNiYlJFJHQkckIiIhISIiJCIiISEiIiQiIiEhIiItJSpMSU5FU1RZTEVHNiMiIiItJSpUSElDS05FU1NHNiMiIiEtJSZTVFlMRUc2IyUlTElORUctJSlQT0xZR09OU0c2JzckNyQkIiIhISIiJCIiISEiIjckJCIiISEiIiQiIiYhIiItJSZDT0xPUkc2JiUkUkdCRyQiIiEhIiIkIiIhISIiJCIiISEiIi0lKkxJTkVTVFlMRUc2IyIiIi0lKlRISUNLTkVTU0c2IyIiIS0lJlNUWUxFRzYjJSVMSU5FRy0lKVBPTFlHT05TRzYnNyQ3JCQiIzUhIiIkIiIhISIiNyQkIiM1ISIiJCIiJiEiIi0lJkNPTE9SRzYmJSRSR0JHJCIiISEiIiQiIiEhIiIkIiIhISIiLSUqTElORVNUWUxFRzYjIiIiLSUqVEhJQ0tORVNTRzYjIiIhLSUmU1RZTEVHNiMlJUxJTkVHLSYlJl9BWElTRzYjIiIiNiYtJSZDT0xPUkc2JiUkUkdCRyQiIiEhIiIkIiIhISIiJCIiISEiIi0lKkxJTkVTVFlMRUc2IyIiIS0lKlRISUNLTkVTU0c2IyIiIS0lLVRSQU5TUEFSRU5DWUc2IyQiIiEhIiItJiUmX0FYSVNHNiMiIiM2Ji0lJkNPTE9SRzYmJSRSR0JHJCIiISEiIiQiIiEhIiIkIiIhISIiLSUqTElORVNUWUxFRzYjIiIhLSUqVEhJQ0tORVNTRzYjIiIhLSUtVFJBTlNQQVJFTkNZRzYjJCIiISEiIi0lKkFYRVNTVFlMRUc2IyUlTk9ORUctJShTQ0FMSU5HRzYjJSxDT05TVFJBSU5FREctJSlfVklTSUJMRUc2IyIiIi0lJVJPT1RHNictJSlCT1VORFNfWEc2IyQiIiEhIiItJSlCT1VORFNfWUc2IyQiIiEhIiItJS1CT1VORFNfV0lEVEhHNiMkIiUrUyEiIi0lLkJPVU5EU19IRUlHSFRHNiMkIiUrUyEiIi0lKUNISUxEUkVORzYiLSUrQU5OT1RBVElPTkc2Jy0lKUJPVU5EU19YRzYjJCIiISEiIi0lKUJPVU5EU19ZRzYjJCIiISEiIi0lLUJPVU5EU19XSURUSEc2IyQiJStTISIiLSUuQk9VTkRTX0hFSUdIVEc2IyQiJStTISIiLSUpQ0hJTERSRU5HNiI=NiI=</Plot></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">PASSED
computing degree of freedoms: 0 DOF 
isostatic structure detected</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2JVEkU1RSRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GM1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj0vJSlzdHJldGNoeUdGPS8lKnN5bW1ldHJpY0dGPS8lKGxhcmdlb3BHRj0vJS5tb3ZhYmxlbGltaXRzR0Y9LyUnYWNjZW50R0Y9LyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTC1GNjYtUSZ0YWJsZUYnRjlGO0Y+RkBGQkZERkZGSC9GS1EmMC4wZW1GJy9GTkZTLUY2Ni1RMCZBcHBseUZ1bmN0aW9uO0YnRjlGO0Y+RkBGQkZERkZGSEZSRlQtSShtZmVuY2VkR0YkNiQtRlk2Ji1GIzYwLUYjNiYtRiw2JVErZGltZW5zaW9uc0YnRi9GMi1GNjYtUSkmZXF1YWxzO0YnRjlGO0Y+RkBGQkZERkZGSEZKRk0tSSNtc0dGJDYjUSMyREYnRjktRjY2LVEiLEYnRjlGOy9GP0YxRkBGQkZERkZGSEZSL0ZOUSwwLjMzMzMzMzNlbUYnLUYjNiYtRiw2JVEldHlwZUYnRi9GMkZeby1GLDYlUSpTVFJVQ1RVUkVGJ0YvRjJGOUZlby1GIzYmLUYsNiVRMWV4dGVybmFsX2FjdGlvbnNGJ0YvRjJGXm8tRlk2Ji1GIzYmLUYsNiVRIkZGJ0YvRjIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsY3ViO0YnLyUmY2xvc2VHUScmcmN1YjtGJ0Y5RmVvLUYjNiYtRiw2JVEkRE9GRidGL0YyRl5vLUkjbW5HRiQ2JFEiMEYnRjlGOUZlby1GIzYmLUYsNiVRNmh5cGVyc3RhdGljX3ZhcmlhYmxlc0YnRi9GMkZeby1GWTYlRjkvRmVxUScmbHNxYjtGJy9GaHFRJyZyc3FiO0YnRjlGZW8tRiM2Ji1GLDYlUShvYmplY3RzRidGL0YyRl5vLUZZNiYtRiM2Li1GLDYlUSJKRidGL0YyRmVvLUYsNiVRI1IwRidGL0YyRmVvLUYsNiVRI1IxRidGL0YyRmVvLUYsNiVRJ1Nfcm9kMEYnRi9GMkZlby1GLDYlUSdTX3JvZDFGJ0YvRjJGX3FGYnFGOUY5RmRxRmdxRjlGX3FGYnFGOUY5RmpyRlxzRjlGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSRTVFJHRihLSSZUQUJMRUdGJjYjNygvSStkaW1lbnNpb25zR0YoUSMyREYoL0kldHlwZUdGJkkqU1RSVUNUVVJFR0YoL0kxZXh0ZXJuYWxfYWN0aW9uc0dGKDwjSSJGR0YoL0kkRE9GR0YoIiIhL0k2aHlwZXJzdGF0aWNfdmFyaWFibGVzR0YoNyIvSShvYmplY3RzR0YoPCdJIkpHRihJI1IwR0YoSSNSMUdGKEknU19yb2QwR0YoSSdTX3JvZDFHRihRKHBwcmludDBGKDcjPUYoSSZmYWxzZUdGJkVcW2wnRjNGNEY2RjdGOUY6Rj1GPkZARkFGQ0ZE</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L200" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">sol := SolveStructure(STR):&lt;%&gt;;</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">Solving the ISOSTATIC structure</Text-field><Text-field style="Line Printed Output" layout="Line Printed Output">computing the equilibrium equation for the isostatic structure</Text-field><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20JFz_S_r0_ground%20was%20removed%20from%20variables%20because%20it%20is%20not%20used%20in%20the%20equations" hyperlink="true"><Font style="HyperlinkWarning">Warning, JFz_S_r0_ground was removed from variables because it is not used in the equations</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20JFz_S_r1_ground%20was%20removed%20from%20variables%20because%20it%20is%20not%20used%20in%20the%20equations" hyperlink="true"><Font style="HyperlinkWarning">Warning, JFz_S_r1_ground was removed from variables because it is not used in the equations</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">structure equilibrium equations:</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSShtZmVuY2VkR0YkNigtSSVtcm93R0YkNiYtSSdtdGFibGVHRiQ2RC1JJG10ckdGJDYmLUkkbXRkR0YkNigtRi82KS1JI21vR0YkNi1RKiZ1bWludXMwO0YnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjIyMjIyMjJlbUYnLyUncnNwYWNlR0ZULUkmbWZyYWNHRiQ2KC1JI21pR0YkNiVRKUpGeF9KX1IxRicvJSdpdGFsaWNHUSV0cnVlRicvRkFRJ2l0YWxpY0YnLUkjbW5HRiQ2JFEiMkYnRkAvJS5saW5ldGhpY2tuZXNzR1EiMUYnLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmZvLyUpYmV2ZWxsZWRHRkUtRj02LVEnJnBsdXM7RidGQEZDRkZGSEZKRkxGTkZQRlJGVS1GWDYoLUZlbjYlUSlKRnlfSl9SMUYnRmhuRltvRl1vRmFvRmRvRmdvRmlvLUY9Ni1RKCZtaW51cztGJ0ZARkNGRkZIRkpGTEZORlBGUkZVLUZlbjYlUSlKRnhfSl9SMEYnRmhuRltvRkAvJSlyb3dhbGlnbkdRIUYnLyUsY29sdW1uYWxpZ25HRltxLyUrZ3JvdXBhbGlnbkdGW3EvJShyb3dzcGFuR0Zjby8lK2NvbHVtbnNwYW5HRmNvRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYoRldGY3BGXnBGW3AtRmVuNiVRJGYxeUYnRmhuRltvRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUZlbjYlUSlKRnlfSl9SMEYnRmhuRltvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42JVEpSkZ6X0pfUjBGJ0ZobkZbb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRlg2KC1GLzYmLUkmbXNxcnRHRiQ2I0Zdby1GPTYtUTEmSW52aXNpYmxlVGltZXM7RidGQEZDRkZGSEZKRkxGTkZQL0ZTUSYwLjBlbUYnL0ZWRmpzLUYsNiQtRi82JkZaRltwRmBwRkBGQEZARl1vRmFvRmRvRmdvRmlvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42JVEpSkZ6X0pfUjFGJ0ZobkZbb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82Ji1GZW42JVEsSkZ4X1NfcjBfUjBGJ0ZobkZbb0ZbcEZmcEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GWDYoLUYvNiZGY3NGZnMtRiw2JC1GLzYqLUZlbjYlUSxKRnhfU19yMV9SMUYnRmhuRltvRmNwLUZlbjYlUSxKRnlfU19yMV9SMUYnRmhuRltvRltwRlpGY3BGYHBGQEZARkBGXW9GYW9GZG9GZ29GaW9GaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUYvNidGPC1GZW42JVEwSkZ4X1NfcjBfZ3JvdW5kRidGaG5GW29GY3BGXXVGQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82JUY8LUZlbjYlUTBKRnlfU19yMF9ncm91bmRGJ0ZobkZbb0ZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42JVEsSkZ5X1NfcjBfUjBGJ0ZobkZbb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRmVuNiVRLEpGel9TX3IwX1IwRidGaG5GW29GaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUYvNilGPC1GZW42JVEwSkZ4X1NfcjFfZ3JvdW5kRidGaG5GW29GY3AtRlg2KEZcdkZdb0Zhb0Zkb0Znb0Zpb0ZbcC1GWDYoRl92Rl1vRmFvRmRvRmdvRmlvRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUYvNilGPC1GZW42JVEwSkZ5X1NfcjFfZ3JvdW5kRidGaG5GW29GW3BGW3lGY3BGXXlGQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRlg2KC1GLzYmRmNzRmZzLUYsNiQtRi82JkZcdkZbcEZfdkZARkBGQEZdb0Zhb0Zkb0Znb0Zpb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRmVuNiVRLEpGel9TX3IxX1IxRidGaG5GW29GaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEvJSZhbGlnbkdRJWF4aXNGJy9GanBRKWJhc2VsaW5lRicvRl1xRmZvL0ZfcVEnfGZybGVmdHxockYnLyUvYWxpZ25tZW50c2NvcGVHRmpuLyUsY29sdW1ud2lkdGhHUSVhdXRvRicvJSZ3aWR0aEdGZ1tsLyUrcm93c3BhY2luZ0dRJjEuMGV4RicvJS5jb2x1bW5zcGFjaW5nR1EmMC44ZW1GJy8lKXJvd2xpbmVzR1Elbm9uZUYnLyUsY29sdW1ubGluZXNHRmJcbC8lJmZyYW1lR0ZiXGwvJS1mcmFtZXNwYWNpbmdHUSwwLjRlbX4wLjVleEYnLyUqZXF1YWxyb3dzR0ZFLyUtZXF1YWxjb2x1bW5zR0ZFLyUtZGlzcGxheXN0eWxlR0ZFLyUlc2lkZUdRJnJpZ2h0RicvJTBtaW5sYWJlbHNwYWNpbmdHRl9cbC8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGRUZARkAvSSttc2VtYW50aWNzR0YkUSpDb2xWZWN0b3JGJy8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGal1sLUYsNigtRi82Ji1GMjZELUY1NiYtRjg2KC1GLzYrLUY9Ni9GP0ZlXWxGaF1sRkBGQ0ZGRkhGSkZMRk5GUEZSRlUtRi82KC1GWDYpLUZebzYmRmNvRmVdbEZoXWxGQC1GXm82JkZgb0ZlXWxGaF1sRkBGYW9GZG9GZ29GaW9GZV1sRmZzLUYvNiYtRmVuNidGZ25GaG5GZV1sRmhdbEZbb0ZlXWxGaF1sRkBGZV1sRmhdbEZALUY9Ni9RIitGJ0ZlXWxGaF1sRkBGQ0ZGRkhGSkZMRk5GUEZSRlUtRi82KEZjX2xGZnMtRi82Ji1GZW42J0ZicEZobkZlXWxGaF1sRltvRmVdbEZoXWxGQEZlXWxGaF1sRkAtRj02L0ZlcEZlXWxGaF1sRkBGQ0ZGRkhGSkZMRk5GUEZSRlUtRmVuNidGaHBGaG5GZV1sRmhdbEZbb0ZlXWxGaF1sRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUYvNipGYV9sRmZgbEZgYGxGXWBsLUZlbjYnRlxyRmhuRmVdbEZoXWxGW29GZV1sRmhdbEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42J0ZjckZobkZlXWxGaF1sRltvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42J0ZqckZobkZlXWxGaF1sRltvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYoRmNfbEZmcy1GLzYoLUZkczYkRmdfbEZlXWxGZnMtRiw2Ji1GLzYoRltgbEZdYGxGZGBsRmVdbEZoXWxGQEZlXWxGaF1sRkBGZV1sRmhdbEZARmVdbEZoXWxGQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRmVuNidGZnRGaG5GZV1sRmhdbEZbb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82KC1GZW42J0ZfdUZobkZlXWxGaF1sRltvRl1gbEZoYGxGZV1sRmhdbEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYoRmNfbEZmcy1GLzYoRmZibEZmcy1GLDYmLUYvNiwtRmVuNidGXnZGaG5GZV1sRmhdbEZbb0ZmYGwtRmVuNidGYXZGaG5GZV1sRmhdbEZbb0ZdYGxGW2BsRmZgbEZkYGxGZV1sRmhdbEZARmVdbEZoXWxGQEZlXWxGaF1sRkBGZV1sRmhdbEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYpRl9fbC1GZW42J0ZqdkZobkZlXWxGaF1sRltvRmZgbEZoY2xGZV1sRmhdbEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYnRl9fbC1GZW42J0Zjd0ZobkZlXWxGaF1sRltvRmVdbEZoXWxGQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRmVuNidGandGaG5GZV1sRmhdbEZbb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRmVuNidGYXhGaG5GZV1sRmhdbEZbb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82K0ZfX2wtRmVuNidGanhGaG5GZV1sRmhdbEZbb0ZmYGwtRi82KEZjX2xGZnMtRi82JkZmZGxGZV1sRmhdbEZARmVdbEZoXWxGQEZdYGwtRi82KEZjX2xGZnMtRi82JkZoZGxGZV1sRmhdbEZARmVdbEZoXWxGQEZlXWxGaF1sRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUYvNitGX19sLUZlbjYnRmd5RmhuRmVdbEZoXWxGW29GXWBsRl5nbEZmYGxGYmdsRmVdbEZoXWxGQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82KEZjX2xGZnMtRi82KEZmYmxGZnMtRiw2Ji1GLzYoRmZkbEZdYGxGaGRsRmVdbEZoXWxGQEZlXWxGaF1sRkBGZV1sRmhdbEZARmVdbEZoXWxGQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRmVuNidGanpGaG5GZV1sRmhdbEZbb0ZpcEZccUZecUZgcUZicUZpcEZccUZecUZbW2xGXltsRmBbbEZhW2xGY1tsRmVbbEZoW2xGaltsRl1cbEZgXGxGY1xsRmVcbEZnXGxGalxsRlxdbEZeXWxGYF1sRmNdbEZlXWxGaF1sRkBGZV1sRmhdbEZAL0ZeXmxRIltGJy9GYV5sUSJdRic=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyNYKiUhR0YoRihbZ2whIyUhISEiMSIxLUklbXJvd0c2JEYmL0krbW9kdWxlbmFtZUdGKEYkNigtSSNtb0dGMDYjUSomdW1pbnVzMDtGKC1JJm1mcmFjR0YwNiQtSSNtaUdGMDYjUSlKRnhfSl9SMUYoLUkjbW5HRjA2I1EiMkYoLUY1NiNRJyZwbHVzO0YoLUY5NiQtRjw2I1EpSkZ5X0pfUjFGKEY/LUY1NiNRKCZtaW51cztGKC1GPDYjUSlKRnhfSl9SMEYoLUYvNidGOEZLRkZGQy1GPDYjUSRmMXlGKC1GPDYjUSlKRnlfSl9SMEYoLUY8NiNRKUpGel9KX1IwRigtRjk2JC1GLzYlLUkmbXNxcnRHRjA2I0Y/LUY1NiNRMSZJbnZpc2libGVUaW1lcztGKC1JKG1mZW5jZWRHRjA2Iy1GLzYlRjtGQ0ZIRj8tRjw2I1EpSkZ6X0pfUjFGKC1GLzYlLUY8NiNRLEpGeF9TX3IwX1IwRihGQ0ZOLUY5NiQtRi82JUZqbkZdby1GYW82Iy1GLzYpLUY8NiNRLEpGeF9TX3IxX1IxRihGSy1GPDYjUSxKRnlfU19yMV9SMUYoRkNGO0ZLRkhGPy1GLzYmRjQtRjw2I1EwSkZ4X1NfcjBfZ3JvdW5kRihGS0Zqby1GLzYkRjQtRjw2I1EwSkZ5X1NfcjBfZ3JvdW5kRigtRjw2I1EsSkZ5X1NfcjBfUjBGKC1GPDYjUSxKRnpfU19yMF9SMEYoLUYvNihGNC1GPDYjUTBKRnhfU19yMV9ncm91bmRGKEZLLUY5NiRGZXBGP0ZDLUY5NiRGaHBGPy1GLzYoRjQtRjw2I1EwSkZ5X1NfcjFfZ3JvdW5kRihGQ0ZgckZLRmJyLUY5NiQtRi82JUZqbkZdby1GYW82Iy1GLzYlRmVwRkNGaHBGPy1GPDYjUSxKRnpfU19yMV9SMUYoNyMtJkknVmVjdG9yR0YlNiNJJ2NvbHVtbkdGKDYjL0kkJWlkR0YoIjVJP1owI3lTdVklPQ==</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">structure unknown variables:</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkobWZlbmNlZEc2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXJvd0dGJDZELUkjbWlHRiQ2JVEpSkZ4X0pfUjBGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSIsRicvRjZRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRkAvJSpzeW1tZXRyaWNHRkAvJShsYXJnZW9wR0ZALyUubW92YWJsZWxpbWl0c0dGQC8lJ2FjY2VudEdGQC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYvNiVRKUpGeV9KX1IwRidGMkY1RjgtRi82JVEpSkZ6X0pfUjBGJ0YyRjVGOC1GLzYlUSlKRnhfSl9SMUYnRjJGNUY4LUYvNiVRKUpGeV9KX1IxRidGMkY1RjgtRi82JVEpSkZ6X0pfUjFGJ0YyRjVGOC1GLzYlUTBKRnhfU19yMF9ncm91bmRGJ0YyRjVGOC1GLzYlUTBKRnlfU19yMF9ncm91bmRGJ0YyRjVGOC1GLzYlUSxKRnhfU19yMF9SMEYnRjJGNUY4LUYvNiVRLEpGeV9TX3IwX1IwRidGMkY1RjgtRi82JVEsSkZ6X1NfcjBfUjBGJ0YyRjVGOC1GLzYlUTBKRnhfU19yMV9ncm91bmRGJ0YyRjVGOC1GLzYlUTBKRnlfU19yMV9ncm91bmRGJ0YyRjVGOC1GLzYlUSxKRnhfU19yMV9SMUYnRjJGNUY4LUYvNiVRLEpGeV9TX3IxX1IxRidGMkY1RjgtRi82JVEsSkZ6X1NfcjFfUjFGJ0YyRjUvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRkBGPEY8LyUlb3BlbkdRJyZsc3FiO0YnLyUmY2xvc2VHUScmcnNxYjtGJw==">NzJJKUpGeF9KX1IwRzYiSSlKRnlfSl9SMEdGJEkpSkZ6X0pfUjBHRiRJKUpGeF9KX1IxR0YkSSlKRnlfSl9SMUdGJEkpSkZ6X0pfUjFHRiRJMEpGeF9TX3IwX2dyb3VuZEdGJEkwSkZ5X1NfcjBfZ3JvdW5kR0YkSSxKRnhfU19yMF9SMEdGJEksSkZ5X1NfcjBfUjBHRiRJLEpGel9TX3IwX1IwR0YkSTBKRnhfU19yMV9ncm91bmRHRiRJMEpGeV9TX3IxX2dyb3VuZEdGJEksSkZ4X1NfcjFfUjFHRiRJLEpGeV9TX3IxX1IxR0YkSSxKRnpfU19yMV9SMUdGJA==</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">solving the structure reaction forces
---DONE---
updating EARTH reactions fields</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSShtZmVuY2VkR0YkNigtSSVtcm93R0YkNiYtSSdtdGFibGVHRiQ2RC1JJG10ckdGJDYmLUkkbXRkR0YkNigtRi82Ji1JI21pR0YkNiVRKUpGeF9KX1IwRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJmVxdWFscztGJy9GRFEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRk4vJSlzdHJldGNoeUdGTi8lKnN5bW1ldHJpY0dGTi8lKGxhcmdlb3BHRk4vJS5tb3ZhYmxlbGltaXRzR0ZOLyUnYWNjZW50R0ZOLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGZ24tRj02JVEkZjF5RidGQEZDRkovJSlyb3dhbGlnbkdRIUYnLyUsY29sdW1uYWxpZ25HRl9vLyUrZ3JvdXBhbGlnbkdGX28vJShyb3dzcGFuR1EiMUYnLyUrY29sdW1uc3BhbkdGZm9GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEpSkZ5X0pfUjBGJ0ZARkNGRi1JI21uR0YkNiRRIjBGJ0ZKRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEpSkZ6X0pfUjBGJ0ZARkNGRkZicEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYmLUY9NiVRKUpGeF9KX1IxRidGQEZDRkYtRi82JS1GRzYtUSomdW1pbnVzMDtGJ0ZKRkxGT0ZRRlNGVUZXRlkvRmZuUSwwLjIyMjIyMjJlbUYnL0ZpbkZeckZqbkZKRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEpSkZ5X0pfUjFGJ0ZARkNGRkZqbkZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYmLUY9NiVRKUpGel9KX1IxRidGQEZDRkZGYnBGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82Ji1GPTYlUTBKRnhfU19yMF9ncm91bmRGJ0ZARkNGRkZqbkZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYmLUY9NiVRMEpGeV9TX3IwX2dyb3VuZEYnRkBGQ0ZGRmJwRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEsSkZ4X1NfcjBfUjBGJ0ZARkNGRkZocUZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYmLUY9NiVRLEpGeV9TX3IwX1IwRidGQEZDRkZGYnBGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82Ji1GPTYlUSxKRnpfU19yMF9SMEYnRkBGQ0ZGRmJwRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEwSkZ4X1NfcjFfZ3JvdW5kRidGQEZDRkZGaHFGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82Ji1GPTYlUTBKRnlfU19yMV9ncm91bmRGJ0ZARkNGRkZqbkZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYmLUY9NiVRLEpGeF9TX3IxX1IxRidGQEZDRkZGam5GSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82Ji1GPTYlUSxKRnlfU19yMV9SMUYnRkBGQ0ZGRmhxRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEsSkZ6X1NfcjFfUjFGJ0ZARkNGRkZicEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLyUmYWxpZ25HUSVheGlzRicvRl5vUSliYXNlbGluZUYnL0Zhb1EnY2VudGVyRicvRmNvUSd8ZnJsZWZ0fGhyRicvJS9hbGlnbm1lbnRzY29wZUdGQi8lLGNvbHVtbndpZHRoR1ElYXV0b0YnLyUmd2lkdGhHRml5LyUrcm93c3BhY2luZ0dRJjEuMGV4RicvJS5jb2x1bW5zcGFjaW5nR1EmMC44ZW1GJy8lKXJvd2xpbmVzR1Elbm9uZUYnLyUsY29sdW1ubGluZXNHRmR6LyUmZnJhbWVHRmR6LyUtZnJhbWVzcGFjaW5nR1EsMC40ZW1+MC41ZXhGJy8lKmVxdWFscm93c0dGTi8lLWVxdWFsY29sdW1uc0dGTi8lLWRpc3BsYXlzdHlsZUdGTi8lJXNpZGVHUSZyaWdodEYnLyUwbWlubGFiZWxzcGFjaW5nR0Zhei8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGTkZKRkovSSttc2VtYW50aWNzR0YkUSpDb2xWZWN0b3JGJy8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGXFxsLUYsNigtRi82Ji1GMjZELUY1NiYtRjg2KC1GLzYoLUY9NidGP0ZARmdbbEZqW2xGQy1GRzYvUSI9RidGZ1tsRmpbbEZKRkxGT0ZRRlNGVUZXRllGZW5GaG4tRj02J0Zcb0ZARmdbbEZqW2xGQ0ZnW2xGaltsRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNigtRj02J0ZhcEZARmdbbEZqW2xGQ0ZjXWwtRmNwNiZGZXBGZ1tsRmpbbEZKRmdbbEZqW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRl5xRkBGZ1tsRmpbbEZDRmNdbEZgXmxGZ1tsRmpbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGZ3FGQEZnW2xGaltsRkNGY11sLUYvNictRkc2L0ZcckZnW2xGaltsRkpGTEZPRlFGU0ZVRldGWUZdckZfckZmXWxGZ1tsRmpbbEZKRmdbbEZqW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRmhyRkBGZ1tsRmpbbEZDRmNdbEZmXWxGZ1tsRmpbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGYXNGQEZnW2xGaltsRkNGY11sRmBebEZnW2xGaltsRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNigtRj02J0Zqc0ZARmdbbEZqW2xGQ0ZjXWxGZl1sRmdbbEZqW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRmN0RkBGZ1tsRmpbbEZDRmNdbEZgXmxGZ1tsRmpbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGXHVGQEZnW2xGaltsRkNGY11sRmJfbEZnW2xGaltsRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNigtRj02J0ZldUZARmdbbEZqW2xGQ0ZjXWxGYF5sRmdbbEZqW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRl52RkBGZ1tsRmpbbEZDRmNdbEZgXmxGZ1tsRmpbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGZ3ZGQEZnW2xGaltsRkNGY11sRmJfbEZnW2xGaltsRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNigtRj02J0Zgd0ZARmdbbEZqW2xGQ0ZjXWxGZl1sRmdbbEZqW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRml3RkBGZ1tsRmpbbEZDRmNdbEZmXWxGZ1tsRmpbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGYnhGQEZnW2xGaltsRkNGY11sRmJfbEZnW2xGaltsRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNigtRj02J0ZbeUZARmdbbEZqW2xGQ0ZjXWxGYF5sRmdbbEZqW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Zib0ZceUZfeUZheUZjeUZleUZneUZqeUZcekZfekZiekZlekZnekZpekZcW2xGXltsRmBbbEZiW2xGZVtsRmdbbEZqW2xGSkZnW2xGaltsRkovRmBcbFEiW0YnL0ZjXGxRIl1GJw==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyNYKiUhR0YoRihbZ2whIyUhISEiMSIxLUklbXJvd0c2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiUtSSNtaUdGMDYjUSlKRnhfSl9SMEYoLUkjbW9HRjA2I1EpJmVxdWFscztGKC1GNTYjUSRmMXlGKC1GLzYlLUY1NiNRKUpGeV9KX1IwRihGOC1JI21uR0YwNiNRIjBGKC1GLzYlLUY1NiNRKUpGel9KX1IwRihGOEZELUYvNiUtRjU2I1EpSkZ4X0pfUjFGKEY4LUYvNiQtRjk2I1EqJnVtaW51czA7RihGPC1GLzYlLUY1NiNRKUpGeV9KX1IxRihGOEY8LUYvNiUtRjU2I1EpSkZ6X0pfUjFGKEY4RkQtRi82JS1GNTYjUTBKRnhfU19yMF9ncm91bmRGKEY4RjwtRi82JS1GNTYjUTBKRnlfU19yMF9ncm91bmRGKEY4RkQtRi82JS1GNTYjUSxKRnhfU19yMF9SMEYoRjhGUi1GLzYlLUY1NiNRLEpGeV9TX3IwX1IwRihGOEZELUYvNiUtRjU2I1EsSkZ6X1NfcjBfUjBGKEY4RkQtRi82JS1GNTYjUTBKRnhfU19yMV9ncm91bmRGKEY4RlItRi82JS1GNTYjUTBKRnlfU19yMV9ncm91bmRGKEY4RjwtRi82JS1GNTYjUSxKRnhfU19yMV9SMUYoRjhGPC1GLzYlLUY1NiNRLEpGeV9TX3IxX1IxRihGOEZSLUYvNiUtRjU2I1EsSkZ6X1NfcjFfUjFGKEY4RkQ3Iy0mSSdWZWN0b3JHRiU2I0knY29sdW1uR0YoNiMvSSQlaWRHRigiNSF6R2E/eVN1WSU9</Equation></Text-field>
</Output>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Test 2 structure solver (3D)</Text-field></Title>
<Group hide-input="false" labelreference="L935" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">L_rod := 1;L_beam := 1;</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEmTF9yb2RGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkjbW5HRiQ2JFEiMUYnRjlGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSZMX3JvZEdGKCIiIjcjRi4=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEnTF9iZWFtRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GM1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj0vJSlzdHJldGNoeUdGPS8lKnN5bW1ldHJpY0dGPS8lKGxhcmdlb3BHRj0vJS5tb3ZhYmxlbGltaXRzR0Y9LyUnYWNjZW50R0Y9LyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTC1JI21uR0YkNiRRIjFGJ0Y5Rjk=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSdMX2JlYW1HRigiIiI3I0Yu</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L937" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF1 := Rotate('Z',-Pi/4):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L940" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">B := MakeBeam(&quot;R0&quot;,ground,L_rod):
R := MakeRod(&quot;R1&quot;,RF1,L_beam):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L942" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">S_beam := MakeSupport(&quot;S_b&quot;,[1,1,1,1,1,0],[B],[0]):
S_rod := MakeSupport(&quot;S_r&quot;,[1,1,1,0,0,0],[R],[0]):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L939" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">J:=MakeJoint(&quot;J&quot;,[1,1,1,0,0,0],[B,R],[L_beam,L_rod]) :</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L930" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">F := MakeForce([0,F_load,0],0,J):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L934" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">STR := MakeStructure({R0,R1,J,S_rod0,S_rod1},{F},dim=&quot;2D&quot;);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">checking structure connections: </Text-field>
</Output>
<Output><Text-field style="Maple Plot" layout="Maple Plot"><Plot height="400.0" type="two-dimensional" width="400.0" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" gridlinevisibility="1" legendvisibility="false">NiI=</Plot></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">PASSED
computing degree of freedoms: 0 DOF 
isostatic structure detected</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2JVEkU1RSRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GM1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj0vJSlzdHJldGNoeUdGPS8lKnN5bW1ldHJpY0dGPS8lKGxhcmdlb3BHRj0vJS5tb3ZhYmxlbGltaXRzR0Y9LyUnYWNjZW50R0Y9LyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTC1GNjYtUSZ0YWJsZUYnRjlGO0Y+RkBGQkZERkZGSC9GS1EmMC4wZW1GJy9GTkZTLUY2Ni1RMCZBcHBseUZ1bmN0aW9uO0YnRjlGO0Y+RkBGQkZERkZGSEZSRlQtSShtZmVuY2VkR0YkNiQtRlk2Ji1GIzYwLUYjNiYtRiw2JVErZGltZW5zaW9uc0YnRi9GMi1GNjYtUSkmZXF1YWxzO0YnRjlGO0Y+RkBGQkZERkZGSEZKRk0tSSNtc0dGJDYjUSMyREYnRjktRjY2LVEiLEYnRjlGOy9GP0YxRkBGQkZERkZGSEZSL0ZOUSwwLjMzMzMzMzNlbUYnLUYjNiYtRiw2JVEldHlwZUYnRi9GMkZeby1GLDYlUSpTVFJVQ1RVUkVGJ0YvRjJGOUZlby1GIzYmLUYsNiVRMWV4dGVybmFsX2FjdGlvbnNGJ0YvRjJGXm8tRlk2Ji1GIzYmLUYsNiVRIkZGJ0YvRjIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsY3ViO0YnLyUmY2xvc2VHUScmcmN1YjtGJ0Y5RmVvLUYjNiYtRiw2JVEkRE9GRidGL0YyRl5vLUkjbW5HRiQ2JFEiMEYnRjlGOUZlby1GIzYmLUYsNiVRNmh5cGVyc3RhdGljX3ZhcmlhYmxlc0YnRi9GMkZeby1GWTYlRjkvRmVxUScmbHNxYjtGJy9GaHFRJyZyc3FiO0YnRjlGZW8tRiM2Ji1GLDYlUShvYmplY3RzRidGL0YyRl5vLUZZNiYtRiM2Li1GLDYlUSJKRidGL0YyRmVvLUYsNiVRI1IwRidGL0YyRmVvLUYsNiVRI1IxRidGL0YyRmVvLUYsNiVRJ1Nfcm9kMEYnRi9GMkZlby1GLDYlUSdTX3JvZDFGJ0YvRjJGX3FGYnFGOUY5RmRxRmdxRjlGX3FGYnFGOUY5RmpyRlxzRjlGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSRTVFJHRihLSSZUQUJMRUdGJjYjNygvSStkaW1lbnNpb25zR0YoUSMyREYoL0kldHlwZUdGJkkqU1RSVUNUVVJFR0YoL0kxZXh0ZXJuYWxfYWN0aW9uc0dGKDwjSSJGR0YoL0kkRE9GR0YoIiIhL0k2aHlwZXJzdGF0aWNfdmFyaWFibGVzR0YoNyIvSShvYmplY3RzR0YoPCdJIkpHRihJI1IwR0YoSSNSMUdGKEknU19yb2QwR0YoSSdTX3JvZDFHRihRKHBwcmludDBGKDcjPUYoSSZmYWxzZUdGJkVcW2wnRjNGNEY2RjdGOUY6Rj1GPkZARkFGQ0ZE</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L932" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">sol := SolveStructure(STR):&lt;%&gt;;</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">Solving the ISOSTATIC structure</Text-field><Text-field style="Line Printed Output" layout="Line Printed Output">computing the equilibrium equation for the isostatic structure</Text-field><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20JFz_J_R0%20was%20removed%20from%20variables%20because%20it%20is%20not%20used%20in%20the%20equations" hyperlink="true"><Font style="HyperlinkWarning">Warning, JFz_J_R0 was removed from variables because it is not used in the equations</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20JFz_S_r0_ground%20was%20removed%20from%20variables%20because%20it%20is%20not%20used%20in%20the%20equations" hyperlink="true"><Font style="HyperlinkWarning">Warning, JFz_S_r0_ground was removed from variables because it is not used in the equations</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20JFz_S_r1_ground%20was%20removed%20from%20variables%20because%20it%20is%20not%20used%20in%20the%20equations" hyperlink="true"><Font style="HyperlinkWarning">Warning, JFz_S_r1_ground was removed from variables because it is not used in the equations</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">structure equilibrium equations:</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSShtZmVuY2VkR0YkNigtSSVtcm93R0YkNiYtSSdtdGFibGVHRiQ2RC1JJG10ckdGJDYmLUkkbXRkR0YkNigtRi82KS1JI21vR0YkNi1RKiZ1bWludXMwO0YnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjIyMjIyMjJlbUYnLyUncnNwYWNlR0ZULUkmbWZyYWNHRiQ2KC1JI21pR0YkNiVRKUpGeF9KX1IxRicvJSdpdGFsaWNHUSV0cnVlRicvRkFRJ2l0YWxpY0YnLUkjbW5HRiQ2JFEiMkYnRkAvJS5saW5ldGhpY2tuZXNzR1EiMUYnLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmZvLyUpYmV2ZWxsZWRHRkUtRj02LVEnJnBsdXM7RidGQEZDRkZGSEZKRkxGTkZQRlJGVS1GWDYoLUZlbjYlUSlKRnlfSl9SMUYnRmhuRltvRl1vRmFvRmRvRmdvRmlvLUY9Ni1RKCZtaW51cztGJ0ZARkNGRkZIRkpGTEZORlBGUkZVLUZlbjYlUSlKRnhfSl9SMEYnRmhuRltvRkAvJSlyb3dhbGlnbkdRIUYnLyUsY29sdW1uYWxpZ25HRltxLyUrZ3JvdXBhbGlnbkdGW3EvJShyb3dzcGFuR0Zjby8lK2NvbHVtbnNwYW5HRmNvRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYqRldGY3BGXnBGY3AtRmVuNiVRKUpGeV9KX1IwRidGaG5GW29GW3AtRmVuNiVRJ0ZfbG9hZEYnRmhuRltvRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUZYNigtRi82Ji1JJm1zcXJ0R0YkNiNGXW8tRj02LVExJkludmlzaWJsZVRpbWVzO0YnRkBGQ0ZGRkhGSkZMRk5GUC9GU1EmMC4wZW1GJy9GVkZfcy1GLDYkLUYvNiZGWkZbcEZgcEZARkBGQEZdb0Zhb0Zkb0Znb0Zpb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRmVuNiVRKUpGel9KX1IxRidGaG5GW29GaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUYvNiYtRmVuNiVRLEpGeF9TX3IwX1IwRidGaG5GW29GW3BGZnBGQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NihGanFGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnFGZXQtRjU2Ji1GODYoLUZYNigtRi82JkZockZbcy1GLDYkLUYvNiotRmVuNiVRLEpGeF9TX3IxX1IxRidGaG5GW29GY3AtRmVuNiVRLEpGeV9TX3IxX1IxRidGaG5GW29GW3BGWkZjcEZgcEZARkBGQEZdb0Zhb0Zkb0Znb0Zpb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82J0Y8LUZlbjYlUTBKRnhfU19yMF9ncm91bmRGJ0ZobkZbb0ZjcEZidEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYlRjwtRmVuNiVRMEpGeV9TX3IwX2dyb3VuZEYnRmhuRltvRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUZlbjYlUSxKRnlfU19yMF9SMEYnRmhuRltvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42JVEsSkZ6X1NfcjBfUjBGJ0ZobkZbb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82KUY8LUZlbjYlUTBKRnhfU19yMV9ncm91bmRGJ0ZobkZbb0ZjcC1GWDYoRmV1Rl1vRmFvRmRvRmdvRmlvRltwLUZYNihGaHVGXW9GYW9GZG9GZ29GaW9GQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82KUY8LUZlbjYlUTBKRnlfU19yMV9ncm91bmRGJ0ZobkZbb0ZbcEZkeEZjcEZmeEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GWDYoLUYvNiZGaHJGW3MtRiw2JC1GLzYmRmV1RltwRmh1RkBGQEZARl1vRmFvRmRvRmdvRmlvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42JVEsSkZ6X1NfcjFfUjFGJ0ZobkZbb0ZpcEZccUZecUZgcUZicUZpcEZccUZecS8lJmFsaWduR1ElYXhpc0YnL0ZqcFEpYmFzZWxpbmVGJy9GXXFGZm8vRl9xUSd8ZnJsZWZ0fGhyRicvJS9hbGlnbm1lbnRzY29wZUdGam4vJSxjb2x1bW53aWR0aEdRJWF1dG9GJy8lJndpZHRoR0ZgW2wvJStyb3dzcGFjaW5nR1EmMS4wZXhGJy8lLmNvbHVtbnNwYWNpbmdHUSYwLjhlbUYnLyUpcm93bGluZXNHUSVub25lRicvJSxjb2x1bW5saW5lc0dGW1xsLyUmZnJhbWVHRltcbC8lLWZyYW1lc3BhY2luZ0dRLDAuNGVtfjAuNWV4RicvJSplcXVhbHJvd3NHRkUvJS1lcXVhbGNvbHVtbnNHRkUvJS1kaXNwbGF5c3R5bGVHRkUvJSVzaWRlR1EmcmlnaHRGJy8lMG1pbmxhYmVsc3BhY2luZ0dGaFtsLyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0ZFRkBGQC9JK21zZW1hbnRpY3NHRiRRKkNvbFZlY3RvckYnLyUlb3BlbkdRJyZsc3FiO0YnLyUmY2xvc2VHUScmcnNxYjtGJ0ZjXWwtRiw2KC1GLzYmLUYyNkQtRjU2Ji1GODYoLUYvNistRj02L0Y/Rl5dbEZhXWxGQEZDRkZGSEZKRkxGTkZQRlJGVS1GLzYoLUZYNiktRl5vNiZGY29GXl1sRmFdbEZALUZebzYmRmBvRl5dbEZhXWxGQEZhb0Zkb0Znb0Zpb0ZeXWxGW3MtRi82Ji1GZW42J0ZnbkZobkZeXWxGYV1sRltvRl5dbEZhXWxGQEZeXWxGYV1sRkAtRj02L1EiK0YnRl5dbEZhXWxGQEZDRkZGSEZKRkxGTkZQRlJGVS1GLzYoRlxfbEZbcy1GLzYmLUZlbjYnRmJwRmhuRl5dbEZhXWxGW29GXl1sRmFdbEZARl5dbEZhXWxGQC1GPTYvRmVwRl5dbEZhXWxGQEZDRkZGSEZKRkxGTkZQRlJGVS1GZW42J0ZocEZobkZeXWxGYV1sRltvRl5dbEZhXWxGQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82LEZqXmxGX2BsRmlfbEZfYGwtRmVuNidGXHJGaG5GXl1sRmFdbEZbb0ZmX2wtRmVuNidGX3JGaG5GXl1sRmFdbEZbb0ZeXWxGYV1sRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUYvNihGXF9sRltzLUYvNigtRmlyNiRGYF9sRl5dbEZbcy1GLDYmLUYvNihGZF9sRmZfbEZdYGxGXl1sRmFdbEZARl5dbEZhXWxGQEZeXWxGYV1sRkBGXl1sRmFdbEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42J0ZbdEZobkZeXWxGYV1sRltvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYoLUZlbjYnRmR0RmhuRl5dbEZhXWxGW29GZl9sRmFgbEZeXWxGYV1sRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoRmlgbEZpcEZccUZecUZgcUZicUZpcEZccUZecUZpYmwtRjU2Ji1GODYoLUYvNihGXF9sRltzLUYvNihGZWFsRltzLUYsNiYtRi82LC1GZW42J0ZndUZobkZeXWxGYV1sRltvRl9gbC1GZW42J0ZqdUZobkZeXWxGYV1sRltvRmZfbEZkX2xGX2BsRl1gbEZeXWxGYV1sRkBGXl1sRmFdbEZARl5dbEZhXWxGQEZeXWxGYV1sRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUYvNilGaF5sLUZlbjYnRmN2RmhuRl5dbEZhXWxGW29GX2BsRmdibEZeXWxGYV1sRkBGaXBGXHFGXnFGYHFGYnFGaXBGXHFGXnEtRjU2Ji1GODYoLUYvNidGaF5sLUZlbjYnRlx3RmhuRl5dbEZhXWxGW29GXl1sRmFdbEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42J0Zjd0ZobkZeXWxGYV1sRltvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42J0Zqd0ZobkZeXWxGYV1sRltvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYrRmhebC1GZW42J0ZjeEZobkZeXWxGYV1sRltvRl9gbC1GLzYoRlxfbEZbcy1GLzYmRmljbEZeXWxGYV1sRkBGXl1sRmFdbEZARmZfbC1GLzYoRlxfbEZbcy1GLzYmRltkbEZeXWxGYV1sRkBGXl1sRmFdbEZARl5dbEZhXWxGQEZpcEZccUZecUZgcUZicUZpcEZccUZecS1GNTYmLUY4NigtRi82K0ZoXmwtRmVuNidGYHlGaG5GXl1sRmFdbEZbb0ZmX2xGYWZsRl9gbEZlZmxGXl1sRmFdbEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GLzYoRlxfbEZbcy1GLzYoRmVhbEZbcy1GLDYmLUYvNihGaWNsRmZfbEZbZGxGXl1sRmFdbEZARl5dbEZhXWxGQEZeXWxGYV1sRkBGXl1sRmFdbEZARmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xLUY1NiYtRjg2KC1GZW42J0ZjekZobkZeXWxGYV1sRltvRmlwRlxxRl5xRmBxRmJxRmlwRlxxRl5xRmR6Rmd6Rml6Rmp6RlxbbEZeW2xGYVtsRmNbbEZmW2xGaVtsRlxcbEZeXGxGYFxsRmNcbEZlXGxGZ1xsRmlcbEZcXWxGXl1sRmFdbEZARl5dbEZhXWxGQC9GZ11sUSJbRicvRmpdbFEiXUYn">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyNYKiUhR0YoRihbZ2whIyUhISEiMSIxLUklbXJvd0c2JEYmL0krbW9kdWxlbmFtZUdGKEYkNigtSSNtb0dGMDYjUSomdW1pbnVzMDtGKC1JJm1mcmFjR0YwNiQtSSNtaUdGMDYjUSlKRnhfSl9SMUYoLUkjbW5HRjA2I1EiMkYoLUY1NiNRJyZwbHVzO0YoLUY5NiQtRjw2I1EpSkZ5X0pfUjFGKEY/LUY1NiNRKCZtaW51cztGKC1GPDYjUSlKRnhfSl9SMEYoLUYvNilGOEZLRkZGSy1GPDYjUSlKRnlfSl9SMEYoRkMtRjw2I1EnRl9sb2FkRigtRjk2JC1GLzYlLUkmbXNxcnRHRjA2I0Y/LUY1NiNRMSZJbnZpc2libGVUaW1lcztGKC1JKG1mZW5jZWRHRjA2Iy1GLzYlRjtGQ0ZIRj8tRjw2I1EpSkZ6X0pfUjFGKC1GLzYlLUY8NiNRLEpGeF9TX3IwX1IwRihGQ0ZORlNGUy1GOTYkLUYvNiVGZ25Gam4tRl5vNiMtRi82KS1GPDYjUSxKRnhfU19yMV9SMUYoRkstRjw2I1EsSkZ5X1NfcjFfUjFGKEZDRjtGS0ZIRj8tRi82JkY0LUY8NiNRMEpGeF9TX3IwX2dyb3VuZEYoRktGZ28tRi82JEY0LUY8NiNRMEpGeV9TX3IwX2dyb3VuZEYoLUY8NiNRLEpGeV9TX3IwX1IwRigtRjw2I1EsSkZ6X1NfcjBfUjBGKC1GLzYoRjQtRjw2I1EwSkZ4X1NfcjFfZ3JvdW5kRihGSy1GOTYkRmJwRj9GQy1GOTYkRmVwRj8tRi82KEY0LUY8NiNRMEpGeV9TX3IxX2dyb3VuZEYoRkNGXXJGS0Zfci1GOTYkLUYvNiVGZ25Gam4tRl5vNiMtRi82JUZicEZDRmVwRj8tRjw2I1EsSkZ6X1NfcjFfUjFGKDcjLSZJJ1ZlY3RvckdGJTYjSSdjb2x1bW5HRig2Iy9JJCVpZEdGKCI1I1ExQ1h5U3VZJT0=</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">structure unknown variables:</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkobWZlbmNlZEc2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXJvd0dGJDZCLUkjbWlHRiQ2JVEpSkZ4X0pfUjBGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSIsRicvRjZRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRkAvJSpzeW1tZXRyaWNHRkAvJShsYXJnZW9wR0ZALyUubW92YWJsZWxpbWl0c0dGQC8lJ2FjY2VudEdGQC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYvNiVRKUpGeV9KX1IwRidGMkY1RjgtRi82JVEpSkZ4X0pfUjFGJ0YyRjVGOC1GLzYlUSlKRnlfSl9SMUYnRjJGNUY4LUYvNiVRKUpGel9KX1IxRidGMkY1RjgtRi82JVEwSkZ4X1NfcjBfZ3JvdW5kRidGMkY1RjgtRi82JVEwSkZ5X1NfcjBfZ3JvdW5kRidGMkY1RjgtRi82JVEsSkZ4X1NfcjBfUjBGJ0YyRjVGOC1GLzYlUSxKRnlfU19yMF9SMEYnRjJGNUY4LUYvNiVRLEpGel9TX3IwX1IwRidGMkY1RjgtRi82JVEwSkZ4X1NfcjFfZ3JvdW5kRidGMkY1RjgtRi82JVEwSkZ5X1NfcjFfZ3JvdW5kRidGMkY1RjgtRi82JVEsSkZ4X1NfcjFfUjFGJ0YyRjVGOC1GLzYlUSxKRnlfU19yMV9SMUYnRjJGNUY4LUYvNiVRLEpGel9TX3IxX1IxRidGMkY1LyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0ZARjxGPC8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7Ric=">NzFJKUpGeF9KX1IwRzYiSSlKRnlfSl9SMEdGJEkpSkZ4X0pfUjFHRiRJKUpGeV9KX1IxR0YkSSlKRnpfSl9SMUdGJEkwSkZ4X1NfcjBfZ3JvdW5kR0YkSTBKRnlfU19yMF9ncm91bmRHRiRJLEpGeF9TX3IwX1IwR0YkSSxKRnlfU19yMF9SMEdGJEksSkZ6X1NfcjBfUjBHRiRJMEpGeF9TX3IxX2dyb3VuZEdGJEkwSkZ5X1NfcjFfZ3JvdW5kR0YkSSxKRnhfU19yMV9SMUdGJEksSkZ5X1NfcjFfUjFHRiRJLEpGel9TX3IxX1IxR0Yk</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">solving the structure reaction forces
---DONE---
updating EARTH reactions fields</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSShtZmVuY2VkR0YkNigtSSVtcm93R0YkNiYtSSdtdGFibGVHRiQ2Qy1JJG10ckdGJDYmLUkkbXRkR0YkNigtRi82Ji1JI21pR0YkNiVRKUpGeF9KX1IwRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJmVxdWFscztGJy9GRFEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRk4vJSlzdHJldGNoeUdGTi8lKnN5bW1ldHJpY0dGTi8lKGxhcmdlb3BHRk4vJS5tb3ZhYmxlbGltaXRzR0ZOLyUnYWNjZW50R0ZOLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGZ24tRj02JVEnRl9sb2FkRidGQEZDRkovJSlyb3dhbGlnbkdRIUYnLyUsY29sdW1uYWxpZ25HRl9vLyUrZ3JvdXBhbGlnbkdGX28vJShyb3dzcGFuR1EiMUYnLyUrY29sdW1uc3BhbkdGZm9GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEpSkZ5X0pfUjBGJ0ZARkNGRi1JI21uR0YkNiRRIjBGJ0ZKRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEpSkZ4X0pfUjFGJ0ZARkNGRi1GLzYlLUZHNi1RKiZ1bWludXMwO0YnRkpGTEZPRlFGU0ZVRldGWS9GZm5RLDAuMjIyMjIyMmVtRicvRmluRmVxRmpuRkpGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82Ji1GPTYlUSlKRnlfSl9SMUYnRkBGQ0ZGRmpuRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEpSkZ6X0pfUjFGJ0ZARkNGRkZicEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYmLUY9NiVRMEpGeF9TX3IwX2dyb3VuZEYnRkBGQ0ZGRmpuRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEwSkZ5X1NfcjBfZ3JvdW5kRidGQEZDRkZGYnBGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82Ji1GPTYlUSxKRnhfU19yMF9SMEYnRkBGQ0ZGRl9xRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEsSkZ5X1NfcjBfUjBGJ0ZARkNGRkZicEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYmLUY9NiVRLEpGel9TX3IwX1IwRidGQEZDRkZGYnBGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82Ji1GPTYlUTBKRnhfU19yMV9ncm91bmRGJ0ZARkNGRkZfcUZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYmLUY9NiVRMEpGeV9TX3IxX2dyb3VuZEYnRkBGQ0ZGRmpuRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNiYtRj02JVEsSkZ4X1NfcjFfUjFGJ0ZARkNGRkZqbkZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYmLUY9NiVRLEpGeV9TX3IxX1IxRidGQEZDRkZGX3FGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82Ji1GPTYlUSxKRnpfU19yMV9SMUYnRkBGQ0ZGRmJwRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8vJSZhbGlnbkdRJWF4aXNGJy9GXm9RKWJhc2VsaW5lRicvRmFvUSdjZW50ZXJGJy9GY29RJ3xmcmxlZnR8aHJGJy8lL2FsaWdubWVudHNjb3BlR0ZCLyUsY29sdW1ud2lkdGhHUSVhdXRvRicvJSZ3aWR0aEdGYHkvJStyb3dzcGFjaW5nR1EmMS4wZXhGJy8lLmNvbHVtbnNwYWNpbmdHUSYwLjhlbUYnLyUpcm93bGluZXNHUSVub25lRicvJSxjb2x1bW5saW5lc0dGW3ovJSZmcmFtZUdGW3ovJS1mcmFtZXNwYWNpbmdHUSwwLjRlbX4wLjVleEYnLyUqZXF1YWxyb3dzR0ZOLyUtZXF1YWxjb2x1bW5zR0ZOLyUtZGlzcGxheXN0eWxlR0ZOLyUlc2lkZUdRJnJpZ2h0RicvJTBtaW5sYWJlbHNwYWNpbmdHRmh5LyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0ZORkpGSi9JK21zZW1hbnRpY3NHRiRRKkNvbFZlY3RvckYnLyUlb3BlbkdRJyZsc3FiO0YnLyUmY2xvc2VHUScmcnNxYjtGJ0ZjW2wtRiw2KC1GLzYmLUYyNkMtRjU2Ji1GODYoLUYvNigtRj02J0Y/RkBGXltsRmFbbEZDLUZHNi9RIj1GJ0ZeW2xGYVtsRkpGTEZPRlFGU0ZVRldGWUZlbkZobi1GPTYnRlxvRkBGXltsRmFbbEZDRl5bbEZhW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRmFwRkBGXltsRmFbbEZDRmpcbC1GY3A2JkZlcEZeW2xGYVtsRkpGXltsRmFbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGXnFGQEZeW2xGYVtsRkNGalxsLUYvNictRkc2L0ZjcUZeW2xGYVtsRkpGTEZPRlFGU0ZVRldGWUZkcUZmcUZdXWxGXltsRmFbbEZKRl5bbEZhW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRl9yRkBGXltsRmFbbEZDRmpcbEZdXWxGXltsRmFbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGaHJGQEZeW2xGYVtsRkNGalxsRmddbEZeW2xGYVtsRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNigtRj02J0Zhc0ZARl5bbEZhW2xGQ0ZqXGxGXV1sRl5bbEZhW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRmpzRkBGXltsRmFbbEZDRmpcbEZnXWxGXltsRmFbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGY3RGQEZeW2xGYVtsRkNGalxsRmFebEZeW2xGYVtsRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNigtRj02J0ZcdUZARl5bbEZhW2xGQ0ZqXGxGZ11sRl5bbEZhW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRmV1RkBGXltsRmFbbEZDRmpcbEZnXWxGXltsRmFbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGXnZGQEZeW2xGYVtsRkNGalxsRmFebEZeW2xGYVtsRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNigtRj02J0ZndkZARl5bbEZhW2xGQ0ZqXGxGXV1sRl5bbEZhW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Ziby1GNTYmLUY4NigtRi82KC1GPTYnRmB3RkBGXltsRmFbbEZDRmpcbEZdXWxGXltsRmFbbEZKRl1vRmBvRmJvRmRvRmdvRl1vRmBvRmJvLUY1NiYtRjg2KC1GLzYoLUY9NidGaXdGQEZeW2xGYVtsRkNGalxsRmFebEZeW2xGYVtsRkpGXW9GYG9GYm9GZG9GZ29GXW9GYG9GYm8tRjU2Ji1GODYoLUYvNigtRj02J0ZieEZARl5bbEZhW2xGQ0ZqXGxGZ11sRl5bbEZhW2xGSkZdb0Zgb0Zib0Zkb0Znb0Zdb0Zgb0Zib0ZjeEZmeEZoeEZqeEZceUZeeUZheUZjeUZmeUZpeUZcekZeekZgekZjekZlekZnekZpekZcW2xGXltsRmFbbEZKRl5bbEZhW2xGSi9GZ1tsUSJbRicvRmpbbFEiXUYn">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyNYKiUhR0YoRihbZ2whIyUhISEiMCIwLUklbXJvd0c2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiUtSSNtaUdGMDYjUSlKRnhfSl9SMEYoLUkjbW9HRjA2I1EpJmVxdWFscztGKC1GNTYjUSdGX2xvYWRGKC1GLzYlLUY1NiNRKUpGeV9KX1IwRihGOC1JI21uR0YwNiNRIjBGKC1GLzYlLUY1NiNRKUpGeF9KX1IxRihGOC1GLzYkLUY5NiNRKiZ1bWludXMwO0YoRjwtRi82JS1GNTYjUSlKRnlfSl9SMUYoRjhGPC1GLzYlLUY1NiNRKUpGel9KX1IxRihGOEZELUYvNiUtRjU2I1EwSkZ4X1NfcjBfZ3JvdW5kRihGOEY8LUYvNiUtRjU2I1EwSkZ5X1NfcjBfZ3JvdW5kRihGOEZELUYvNiUtRjU2I1EsSkZ4X1NfcjBfUjBGKEY4Rk0tRi82JS1GNTYjUSxKRnlfU19yMF9SMEYoRjhGRC1GLzYlLUY1NiNRLEpGel9TX3IwX1IwRihGOEZELUYvNiUtRjU2I1EwSkZ4X1NfcjFfZ3JvdW5kRihGOEZNLUYvNiUtRjU2I1EwSkZ5X1NfcjFfZ3JvdW5kRihGOEY8LUYvNiUtRjU2I1EsSkZ4X1NfcjFfUjFGKEY4RjwtRi82JS1GNTYjUSxKRnlfU19yMV9SMUYoRjhGTS1GLzYlLUY1NiNRLEpGel9TX3IxX1IxRihGOEZENyMtJkknVmVjdG9yR0YlNiNJJ2NvbHVtbkdGKDYjL0kkJWlkR0YoIjVtUlNfJXlTdVklPQ==</Equation></Text-field>
</Output>
</Group>
</Section>
<Group hide-input="false" labelreference="L887" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L795" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L860" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L861" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
</Worksheet>